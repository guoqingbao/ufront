func.func @forward(%input.1: tensor<1x3x224x224xf32>) -> tensor<1x1000xf32>  { 
	%1="ufront.conv2d"(%input.1){groups=1, kernel=[7, 7], pad=[3, 3], stride=[2, 2]}:(tensor<1x3x224x224xf32>) -> tensor<1x64x112x112xf32>
	%2="ufront.batchnorm"(%1):(tensor<1x64x112x112xf32>) -> tensor<1x64x112x112xf32>
	%3="ufront.relu"(%2):(tensor<1x64x112x112xf32>) -> tensor<1x64x112x112xf32>
	%4="ufront.pool2d"(%3){kernel=[3, 3], pad=[1, 1], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x64x112x112xf32>) -> tensor<1x64x56x56xf32>
	%5="ufront.conv2d"(%4){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%6="ufront.batchnorm"(%5):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%7="ufront.relu"(%6):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%8="ufront.conv2d"(%7){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%9="ufront.batchnorm"(%8):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%10="ufront.relu"(%9):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%11="ufront.conv2d"(%10){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x256x56x56xf32>
	%12="ufront.batchnorm"(%11):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%13="ufront.conv2d"(%4){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x256x56x56xf32>
	%14="ufront.batchnorm"(%13):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%15="ufront.add"(%12, %14):(tensor<1x256x56x56xf32>, tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%16="ufront.relu"(%15):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%17="ufront.conv2d"(%16){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x56x56xf32>) -> tensor<1x64x56x56xf32>
	%18="ufront.batchnorm"(%17):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%19="ufront.relu"(%18):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%20="ufront.conv2d"(%19){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%21="ufront.batchnorm"(%20):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%22="ufront.relu"(%21):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%23="ufront.conv2d"(%22){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x256x56x56xf32>
	%24="ufront.batchnorm"(%23):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%25="ufront.add"(%24, %16):(tensor<1x256x56x56xf32>, tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%26="ufront.relu"(%25):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%27="ufront.conv2d"(%26){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x56x56xf32>) -> tensor<1x64x56x56xf32>
	%28="ufront.batchnorm"(%27):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%29="ufront.relu"(%28):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%30="ufront.conv2d"(%29){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%31="ufront.batchnorm"(%30):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%32="ufront.relu"(%31):(tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
	%33="ufront.conv2d"(%32){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x56x56xf32>) -> tensor<1x256x56x56xf32>
	%34="ufront.batchnorm"(%33):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%35="ufront.add"(%34, %26):(tensor<1x256x56x56xf32>, tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%36="ufront.relu"(%35):(tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
	%37="ufront.conv2d"(%36){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x56x56xf32>) -> tensor<1x128x56x56xf32>
	%38="ufront.batchnorm"(%37):(tensor<1x128x56x56xf32>) -> tensor<1x128x56x56xf32>
	%39="ufront.relu"(%38):(tensor<1x128x56x56xf32>) -> tensor<1x128x56x56xf32>
	%40="ufront.conv2d"(%39){groups=1, kernel=[3, 3], pad=[1, 1], stride=[2, 2]}:(tensor<1x128x56x56xf32>) -> tensor<1x128x28x28xf32>
	%41="ufront.batchnorm"(%40):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%42="ufront.relu"(%41):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%43="ufront.conv2d"(%42){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x512x28x28xf32>
	%44="ufront.batchnorm"(%43):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%45="ufront.conv2d"(%36){groups=1, kernel=[1, 1], pad=[0, 0], stride=[2, 2]}:(tensor<1x256x56x56xf32>) -> tensor<1x512x28x28xf32>
	%46="ufront.batchnorm"(%45):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%47="ufront.add"(%44, %46):(tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%48="ufront.relu"(%47):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%49="ufront.conv2d"(%48){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x28x28xf32>) -> tensor<1x128x28x28xf32>
	%50="ufront.batchnorm"(%49):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%51="ufront.relu"(%50):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%52="ufront.conv2d"(%51){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%53="ufront.batchnorm"(%52):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%54="ufront.relu"(%53):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%55="ufront.conv2d"(%54){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x512x28x28xf32>
	%56="ufront.batchnorm"(%55):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%57="ufront.add"(%56, %48):(tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%58="ufront.relu"(%57):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%59="ufront.conv2d"(%58){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x28x28xf32>) -> tensor<1x128x28x28xf32>
	%60="ufront.batchnorm"(%59):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%61="ufront.relu"(%60):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%62="ufront.conv2d"(%61){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%63="ufront.batchnorm"(%62):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%64="ufront.relu"(%63):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%65="ufront.conv2d"(%64){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x512x28x28xf32>
	%66="ufront.batchnorm"(%65):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%67="ufront.add"(%66, %58):(tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%68="ufront.relu"(%67):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%69="ufront.conv2d"(%68){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x28x28xf32>) -> tensor<1x128x28x28xf32>
	%70="ufront.batchnorm"(%69):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%71="ufront.relu"(%70):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%72="ufront.conv2d"(%71){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%73="ufront.batchnorm"(%72):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%74="ufront.relu"(%73):(tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
	%75="ufront.conv2d"(%74){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x128x28x28xf32>) -> tensor<1x512x28x28xf32>
	%76="ufront.batchnorm"(%75):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%77="ufront.add"(%76, %68):(tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%78="ufront.relu"(%77):(tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
	%79="ufront.conv2d"(%78){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x28x28xf32>) -> tensor<1x256x28x28xf32>
	%80="ufront.batchnorm"(%79):(tensor<1x256x28x28xf32>) -> tensor<1x256x28x28xf32>
	%81="ufront.relu"(%80):(tensor<1x256x28x28xf32>) -> tensor<1x256x28x28xf32>
	%82="ufront.conv2d"(%81){groups=1, kernel=[3, 3], pad=[1, 1], stride=[2, 2]}:(tensor<1x256x28x28xf32>) -> tensor<1x256x14x14xf32>
	%83="ufront.batchnorm"(%82):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%84="ufront.relu"(%83):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%85="ufront.conv2d"(%84){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%86="ufront.batchnorm"(%85):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%87="ufront.conv2d"(%78){groups=1, kernel=[1, 1], pad=[0, 0], stride=[2, 2]}:(tensor<1x512x28x28xf32>) -> tensor<1x1024x14x14xf32>
	%88="ufront.batchnorm"(%87):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%89="ufront.add"(%86, %88):(tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%90="ufront.relu"(%89):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%91="ufront.conv2d"(%90){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x1024x14x14xf32>) -> tensor<1x256x14x14xf32>
	%92="ufront.batchnorm"(%91):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%93="ufront.relu"(%92):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%94="ufront.conv2d"(%93){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%95="ufront.batchnorm"(%94):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%96="ufront.relu"(%95):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%97="ufront.conv2d"(%96){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%98="ufront.batchnorm"(%97):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%99="ufront.add"(%98, %90):(tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%100="ufront.relu"(%99):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%101="ufront.conv2d"(%100){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x1024x14x14xf32>) -> tensor<1x256x14x14xf32>
	%102="ufront.batchnorm"(%101):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%103="ufront.relu"(%102):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%104="ufront.conv2d"(%103){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%105="ufront.batchnorm"(%104):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%106="ufront.relu"(%105):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%107="ufront.conv2d"(%106){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%108="ufront.batchnorm"(%107):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%109="ufront.add"(%108, %100):(tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%110="ufront.relu"(%109):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%111="ufront.conv2d"(%110){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x1024x14x14xf32>) -> tensor<1x256x14x14xf32>
	%112="ufront.batchnorm"(%111):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%113="ufront.relu"(%112):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%114="ufront.conv2d"(%113){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%115="ufront.batchnorm"(%114):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%116="ufront.relu"(%115):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%117="ufront.conv2d"(%116){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%118="ufront.batchnorm"(%117):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%119="ufront.add"(%118, %110):(tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%120="ufront.relu"(%119):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%121="ufront.conv2d"(%120){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x1024x14x14xf32>) -> tensor<1x256x14x14xf32>
	%122="ufront.batchnorm"(%121):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%123="ufront.relu"(%122):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%124="ufront.conv2d"(%123){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%125="ufront.batchnorm"(%124):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%126="ufront.relu"(%125):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%127="ufront.conv2d"(%126){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%128="ufront.batchnorm"(%127):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%129="ufront.add"(%128, %120):(tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%130="ufront.relu"(%129):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%131="ufront.conv2d"(%130){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x1024x14x14xf32>) -> tensor<1x256x14x14xf32>
	%132="ufront.batchnorm"(%131):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%133="ufront.relu"(%132):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%134="ufront.conv2d"(%133){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%135="ufront.batchnorm"(%134):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%136="ufront.relu"(%135):(tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
	%137="ufront.conv2d"(%136){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x256x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%138="ufront.batchnorm"(%137):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%139="ufront.add"(%138, %130):(tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%140="ufront.relu"(%139):(tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
	%141="ufront.conv2d"(%140){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x1024x14x14xf32>) -> tensor<1x512x14x14xf32>
	%142="ufront.batchnorm"(%141):(tensor<1x512x14x14xf32>) -> tensor<1x512x14x14xf32>
	%143="ufront.relu"(%142):(tensor<1x512x14x14xf32>) -> tensor<1x512x14x14xf32>
	%144="ufront.conv2d"(%143){groups=1, kernel=[3, 3], pad=[1, 1], stride=[2, 2]}:(tensor<1x512x14x14xf32>) -> tensor<1x512x7x7xf32>
	%145="ufront.batchnorm"(%144):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%146="ufront.relu"(%145):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%147="ufront.conv2d"(%146){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%148="ufront.batchnorm"(%147):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%149="ufront.conv2d"(%140){groups=1, kernel=[1, 1], pad=[0, 0], stride=[2, 2]}:(tensor<1x1024x14x14xf32>) -> tensor<1x2048x7x7xf32>
	%150="ufront.batchnorm"(%149):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%151="ufront.add"(%148, %150):(tensor<1x2048x7x7xf32>, tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%152="ufront.relu"(%151):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%153="ufront.conv2d"(%152){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x2048x7x7xf32>) -> tensor<1x512x7x7xf32>
	%154="ufront.batchnorm"(%153):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%155="ufront.relu"(%154):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%156="ufront.conv2d"(%155){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%157="ufront.batchnorm"(%156):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%158="ufront.relu"(%157):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%159="ufront.conv2d"(%158){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%160="ufront.batchnorm"(%159):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%161="ufront.add"(%160, %152):(tensor<1x2048x7x7xf32>, tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%162="ufront.relu"(%161):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%163="ufront.conv2d"(%162){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x2048x7x7xf32>) -> tensor<1x512x7x7xf32>
	%164="ufront.batchnorm"(%163):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%165="ufront.relu"(%164):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%166="ufront.conv2d"(%165){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%167="ufront.batchnorm"(%166):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%168="ufront.relu"(%167):(tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
	%169="ufront.conv2d"(%168){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<1x512x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%170="ufront.batchnorm"(%169):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%171="ufront.add"(%170, %162):(tensor<1x2048x7x7xf32>, tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%172="ufront.relu"(%171):(tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
	%173="ufront.pool2d"(%172){output_size=[1, 1], pad=[0, 0], pool_type="POOL_ADAPTIVE", stride=[1, 1]}:(tensor<1x2048x7x7xf32>) -> tensor<1x2048x1x1xf32>
	%174="ufront.flat"(%173){end_dim=-1, start_dim=1}:(tensor<1x2048x1x1xf32>) -> tensor<1x2048xf32>
	%175="ufront.linear"(%174):(tensor<1x2048xf32>) -> tensor<1x1000xf32>
	%176="ufront.softmax"(%175):(tensor<1x1000xf32>) -> tensor<1x1000xf32>
	return %176: tensor<1x1000xf32>
}