func.func @forward(%input1: tensor<32x3x224x224xf32>) -> tensor<32x1000xf32>  { 
	%1="ufront.conv2d"(%input1){groups=1, kernel=[7, 7], pad=[3, 3], stride=[2, 2]}:(tensor<32x3x224x224xf32>) -> tensor<32x64x112x112xf32>
	%2="ufront.pool2d"(%1){kernel=[3, 3], pad=[1, 1], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<32x64x112x112xf32>) -> tensor<32x64x56x56xf32>
	%3="ufront.batchnorm"(%2){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%4="ufront.relu"(%3):(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%5="ufront.conv2d"(%4){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%6="ufront.relu"(%5):(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%7="ufront.conv2d"(%6){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%8="ufront.relu"(%7):(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%9="ufront.conv2d"(%8){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x56x56xf32>) -> tensor<32x256x56x56xf32>
	%10="ufront.conv2d"(%4){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x56x56xf32>) -> tensor<32x256x56x56xf32>
	%11="ufront.add"(%10, %9):(tensor<32x256x56x56xf32>, tensor<32x256x56x56xf32>) -> tensor<32x256x56x56xf32>
	%12="ufront.batchnorm"(%11){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x256x56x56xf32>) -> tensor<32x256x56x56xf32>
	%13="ufront.relu"(%12):(tensor<32x256x56x56xf32>) -> tensor<32x256x56x56xf32>
	%14="ufront.conv2d"(%13){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x56x56xf32>) -> tensor<32x64x56x56xf32>
	%15="ufront.relu"(%14):(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%16="ufront.conv2d"(%15){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%17="ufront.relu"(%16):(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%18="ufront.conv2d"(%17){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x56x56xf32>) -> tensor<32x256x56x56xf32>
	%19="ufront.add"(%11, %18):(tensor<32x256x56x56xf32>, tensor<32x256x56x56xf32>) -> tensor<32x256x56x56xf32>
	%20="ufront.pool2d"(%19){kernel=[1, 1], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<32x256x56x56xf32>) -> tensor<32x256x28x28xf32>
	%21="ufront.batchnorm"(%19){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x256x56x56xf32>) -> tensor<32x256x56x56xf32>
	%22="ufront.relu"(%21):(tensor<32x256x56x56xf32>) -> tensor<32x256x56x56xf32>
	%23="ufront.conv2d"(%22){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x56x56xf32>) -> tensor<32x64x56x56xf32>
	%24="ufront.relu"(%23):(tensor<32x64x56x56xf32>) -> tensor<32x64x56x56xf32>
	%25="ufront.conv2d"(%24){groups=1, kernel=[3, 3], pad=[1, 1], stride=[2, 2]}:(tensor<32x64x56x56xf32>) -> tensor<32x64x28x28xf32>
	%26="ufront.relu"(%25):(tensor<32x64x28x28xf32>) -> tensor<32x64x28x28xf32>
	%27="ufront.conv2d"(%26){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x28x28xf32>) -> tensor<32x256x28x28xf32>
	%28="ufront.add"(%20, %27):(tensor<32x256x28x28xf32>, tensor<32x256x28x28xf32>) -> tensor<32x256x28x28xf32>
	%29="ufront.batchnorm"(%28){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x256x28x28xf32>) -> tensor<32x256x28x28xf32>
	%30="ufront.relu"(%29):(tensor<32x256x28x28xf32>) -> tensor<32x256x28x28xf32>
	%31="ufront.conv2d"(%30){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x28x28xf32>) -> tensor<32x128x28x28xf32>
	%32="ufront.relu"(%31):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%33="ufront.conv2d"(%32){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%34="ufront.relu"(%33):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%35="ufront.conv2d"(%34){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x128x28x28xf32>) -> tensor<32x512x28x28xf32>
	%36="ufront.conv2d"(%30){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x28x28xf32>) -> tensor<32x512x28x28xf32>
	%37="ufront.add"(%36, %35):(tensor<32x512x28x28xf32>, tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%38="ufront.batchnorm"(%37){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%39="ufront.relu"(%38):(tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%40="ufront.conv2d"(%39){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x28x28xf32>) -> tensor<32x128x28x28xf32>
	%41="ufront.relu"(%40):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%42="ufront.conv2d"(%41){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%43="ufront.relu"(%42):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%44="ufront.conv2d"(%43){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x128x28x28xf32>) -> tensor<32x512x28x28xf32>
	%45="ufront.add"(%37, %44):(tensor<32x512x28x28xf32>, tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%46="ufront.batchnorm"(%45){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%47="ufront.relu"(%46):(tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%48="ufront.conv2d"(%47){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x28x28xf32>) -> tensor<32x128x28x28xf32>
	%49="ufront.relu"(%48):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%50="ufront.conv2d"(%49){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%51="ufront.relu"(%50):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%52="ufront.conv2d"(%51){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x128x28x28xf32>) -> tensor<32x512x28x28xf32>
	%53="ufront.add"(%45, %52):(tensor<32x512x28x28xf32>, tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%54="ufront.pool2d"(%53){kernel=[1, 1], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<32x512x28x28xf32>) -> tensor<32x512x14x14xf32>
	%55="ufront.batchnorm"(%53){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%56="ufront.relu"(%55):(tensor<32x512x28x28xf32>) -> tensor<32x512x28x28xf32>
	%57="ufront.conv2d"(%56){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x28x28xf32>) -> tensor<32x128x28x28xf32>
	%58="ufront.relu"(%57):(tensor<32x128x28x28xf32>) -> tensor<32x128x28x28xf32>
	%59="ufront.conv2d"(%58){groups=1, kernel=[3, 3], pad=[1, 1], stride=[2, 2]}:(tensor<32x128x28x28xf32>) -> tensor<32x128x14x14xf32>
	%60="ufront.relu"(%59):(tensor<32x128x14x14xf32>) -> tensor<32x128x14x14xf32>
	%61="ufront.conv2d"(%60){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x128x14x14xf32>) -> tensor<32x512x14x14xf32>
	%62="ufront.add"(%54, %61):(tensor<32x512x14x14xf32>, tensor<32x512x14x14xf32>) -> tensor<32x512x14x14xf32>
	%63="ufront.batchnorm"(%62){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x512x14x14xf32>) -> tensor<32x512x14x14xf32>
	%64="ufront.relu"(%63):(tensor<32x512x14x14xf32>) -> tensor<32x512x14x14xf32>
	%65="ufront.conv2d"(%64){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x14x14xf32>) -> tensor<32x256x14x14xf32>
	%66="ufront.relu"(%65):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%67="ufront.conv2d"(%66){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%68="ufront.relu"(%67):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%69="ufront.conv2d"(%68){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%70="ufront.conv2d"(%64){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%71="ufront.add"(%70, %69):(tensor<32x1024x14x14xf32>, tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%72="ufront.batchnorm"(%71){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%73="ufront.relu"(%72):(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%74="ufront.conv2d"(%73){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x14x14xf32>) -> tensor<32x256x14x14xf32>
	%75="ufront.relu"(%74):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%76="ufront.conv2d"(%75){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%77="ufront.relu"(%76):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%78="ufront.conv2d"(%77){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%79="ufront.add"(%71, %78):(tensor<32x1024x14x14xf32>, tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%80="ufront.batchnorm"(%79){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%81="ufront.relu"(%80):(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%82="ufront.conv2d"(%81){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x14x14xf32>) -> tensor<32x256x14x14xf32>
	%83="ufront.relu"(%82):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%84="ufront.conv2d"(%83){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%85="ufront.relu"(%84):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%86="ufront.conv2d"(%85){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%87="ufront.add"(%79, %86):(tensor<32x1024x14x14xf32>, tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%88="ufront.batchnorm"(%87){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%89="ufront.relu"(%88):(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%90="ufront.conv2d"(%89){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x14x14xf32>) -> tensor<32x256x14x14xf32>
	%91="ufront.relu"(%90):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%92="ufront.conv2d"(%91){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%93="ufront.relu"(%92):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%94="ufront.conv2d"(%93){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%95="ufront.add"(%87, %94):(tensor<32x1024x14x14xf32>, tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%96="ufront.batchnorm"(%95){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%97="ufront.relu"(%96):(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%98="ufront.conv2d"(%97){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x14x14xf32>) -> tensor<32x256x14x14xf32>
	%99="ufront.relu"(%98):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%100="ufront.conv2d"(%99){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%101="ufront.relu"(%100):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%102="ufront.conv2d"(%101){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%103="ufront.add"(%95, %102):(tensor<32x1024x14x14xf32>, tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%104="ufront.pool2d"(%103){kernel=[1, 1], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<32x1024x14x14xf32>) -> tensor<32x1024x7x7xf32>
	%105="ufront.batchnorm"(%103){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%106="ufront.relu"(%105):(tensor<32x1024x14x14xf32>) -> tensor<32x1024x14x14xf32>
	%107="ufront.conv2d"(%106){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x14x14xf32>) -> tensor<32x256x14x14xf32>
	%108="ufront.relu"(%107):(tensor<32x256x14x14xf32>) -> tensor<32x256x14x14xf32>
	%109="ufront.conv2d"(%108){groups=1, kernel=[3, 3], pad=[1, 1], stride=[2, 2]}:(tensor<32x256x14x14xf32>) -> tensor<32x256x7x7xf32>
	%110="ufront.relu"(%109):(tensor<32x256x7x7xf32>) -> tensor<32x256x7x7xf32>
	%111="ufront.conv2d"(%110){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x256x7x7xf32>) -> tensor<32x1024x7x7xf32>
	%112="ufront.add"(%104, %111):(tensor<32x1024x7x7xf32>, tensor<32x1024x7x7xf32>) -> tensor<32x1024x7x7xf32>
	%113="ufront.batchnorm"(%112){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x1024x7x7xf32>) -> tensor<32x1024x7x7xf32>
	%114="ufront.relu"(%113):(tensor<32x1024x7x7xf32>) -> tensor<32x1024x7x7xf32>
	%115="ufront.conv2d"(%114){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x7x7xf32>) -> tensor<32x512x7x7xf32>
	%116="ufront.relu"(%115):(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%117="ufront.conv2d"(%116){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%118="ufront.relu"(%117):(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%119="ufront.conv2d"(%118){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%120="ufront.conv2d"(%114){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x1024x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%121="ufront.add"(%120, %119):(tensor<32x2048x7x7xf32>, tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%122="ufront.batchnorm"(%121){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%123="ufront.relu"(%122):(tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%124="ufront.conv2d"(%123){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x2048x7x7xf32>) -> tensor<32x512x7x7xf32>
	%125="ufront.relu"(%124):(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%126="ufront.conv2d"(%125){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%127="ufront.relu"(%126):(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%128="ufront.conv2d"(%127){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%129="ufront.add"(%121, %128):(tensor<32x2048x7x7xf32>, tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%130="ufront.batchnorm"(%129){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%131="ufront.relu"(%130):(tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%132="ufront.conv2d"(%131){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x2048x7x7xf32>) -> tensor<32x512x7x7xf32>
	%133="ufront.relu"(%132):(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%134="ufront.conv2d"(%133){groups=1, kernel=[3, 3], pad=[1, 1], stride=[1, 1]}:(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%135="ufront.relu"(%134):(tensor<32x512x7x7xf32>) -> tensor<32x512x7x7xf32>
	%136="ufront.conv2d"(%135){groups=1, kernel=[1, 1], pad=[0, 0], stride=[1, 1]}:(tensor<32x512x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%137="ufront.add"(%129, %136):(tensor<32x2048x7x7xf32>, tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%138="ufront.batchnorm"(%137){affine=true, eps=0.00001001, momentum=(0.99,), track_running_stats=true}:(tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%139="ufront.relu"(%138):(tensor<32x2048x7x7xf32>) -> tensor<32x2048x7x7xf32>
	%140="ufront.pool2d"(%139){output_size=[1, 1], pad=[0, 0], pool_type="POOL_ADAPTIVE", stride=[1, 1]}:(tensor<32x2048x7x7xf32>) -> tensor<32x2048x1x1xf32>
	%141="ufront.flat"(%140){end_dim=-1, start_dim=1}:(tensor<32x2048x1x1xf32>) -> tensor<32x2048xf32>
	%142="ufront.linear"(%141):(tensor<32x2048xf32>) -> tensor<32x1000xf32>
	%143="ufront.softmax"(%142):(tensor<32x1000xf32>) -> tensor<32x1000xf32>
	return %143: tensor<32x1000xf32>
}