func.func @forward(%input1: tensor<1x3x224x224xf32>) -> tensor<1x1000xf32>  { 
	%1="ufront.conv2d"(%input1){groups=1, kernel=[4, 4], pad=[0, 0], stride=[4, 4]}:(tensor<1x3x224x224xf32>) -> tensor<1x96x56x56xf32>
	%2="ufront.transpose"(%1){perm=[0, 2, 3, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x56x56x96xf32>
	%3="ufront.parameter"(%3){requires_grad=True}:(tensor<96xf32>) -> tensor<96xf32>
	%4="ufront.parameter"(%4){requires_grad=True}:(tensor<96xf32>) -> tensor<96xf32>
	%5="ufront.layer_norm"(%2){elementwise_affine=True, eps=1e-06, normalized_shape=(96,)}:(tensor<1x56x56x96xf32>) -> tensor<1x56x56x96xf32>
	%6="ufront.transpose"(%5){perm=[0, 3, 1, 2]}:(tensor<1x56x56x96xf32>) -> tensor<1x96x56x56xf32>
	%7="ufront.parameter"(%7){requires_grad=True}:(tensor<96x1x1xf32>) -> tensor<96x1x1xf32>
	%8="ufront.conv2d"(%6){groups=96, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%9="ufront.transpose"(%8){perm=[0, 2, 3, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x56x56x96xf32>
	%10="ufront.layer_norm"(%9){elementwise_affine=True, eps=1e-06, normalized_shape=(96,)}:(tensor<1x56x56x96xf32>) -> tensor<1x56x56x96xf32>
	%11="ufront.linear"(%10):(tensor<1x56x56x96xf32>) -> tensor<1x56x56x384xf32>
	%12="ufront.gelu"(%11):(tensor<1x56x56x384xf32>) -> tensor<1x56x56x384xf32>
	%13="ufront.linear"(%12):(tensor<1x56x56x384xf32>) -> tensor<1x56x56x96xf32>
	%14="ufront.transpose"(%13){perm=[0, 3, 1, 2]}:(tensor<1x56x56x96xf32>) -> tensor<1x96x56x56xf32>
	%15="ufront.multiply"(%7, %14):(tensor<96x1x1xf32>, tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%16="ufront.add"(%15, %6):(tensor<1x96x56x56xf32>, tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%17="ufront.parameter"(%17){requires_grad=True}:(tensor<96x1x1xf32>) -> tensor<96x1x1xf32>
	%18="ufront.conv2d"(%16){groups=96, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%19="ufront.transpose"(%18){perm=[0, 2, 3, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x56x56x96xf32>
	%20="ufront.layer_norm"(%19){elementwise_affine=True, eps=1e-06, normalized_shape=(96,)}:(tensor<1x56x56x96xf32>) -> tensor<1x56x56x96xf32>
	%21="ufront.linear"(%20):(tensor<1x56x56x96xf32>) -> tensor<1x56x56x384xf32>
	%22="ufront.gelu"(%21):(tensor<1x56x56x384xf32>) -> tensor<1x56x56x384xf32>
	%23="ufront.linear"(%22):(tensor<1x56x56x384xf32>) -> tensor<1x56x56x96xf32>
	%24="ufront.transpose"(%23){perm=[0, 3, 1, 2]}:(tensor<1x56x56x96xf32>) -> tensor<1x96x56x56xf32>
	%25="ufront.multiply"(%17, %24):(tensor<96x1x1xf32>, tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%26="ufront.add"(%25, %16):(tensor<1x96x56x56xf32>, tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%27="ufront.parameter"(%27){requires_grad=True}:(tensor<96x1x1xf32>) -> tensor<96x1x1xf32>
	%28="ufront.conv2d"(%26){groups=96, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%29="ufront.transpose"(%28){perm=[0, 2, 3, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x56x56x96xf32>
	%30="ufront.layer_norm"(%29){elementwise_affine=True, eps=1e-06, normalized_shape=(96,)}:(tensor<1x56x56x96xf32>) -> tensor<1x56x56x96xf32>
	%31="ufront.linear"(%30):(tensor<1x56x56x96xf32>) -> tensor<1x56x56x384xf32>
	%32="ufront.gelu"(%31):(tensor<1x56x56x384xf32>) -> tensor<1x56x56x384xf32>
	%33="ufront.linear"(%32):(tensor<1x56x56x384xf32>) -> tensor<1x56x56x96xf32>
	%34="ufront.transpose"(%33){perm=[0, 3, 1, 2]}:(tensor<1x56x56x96xf32>) -> tensor<1x96x56x56xf32>
	%35="ufront.multiply"(%27, %34):(tensor<96x1x1xf32>, tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%36="ufront.add"(%35, %26):(tensor<1x96x56x56xf32>, tensor<1x96x56x56xf32>) -> tensor<1x96x56x56xf32>
	%37="ufront.transpose"(%36){perm=[0, 2, 3, 1]}:(tensor<1x96x56x56xf32>) -> tensor<1x56x56x96xf32>
	%38="ufront.parameter"(%38){requires_grad=True}:(tensor<96xf32>) -> tensor<96xf32>
	%39="ufront.parameter"(%39){requires_grad=True}:(tensor<96xf32>) -> tensor<96xf32>
	%40="ufront.layer_norm"(%37){elementwise_affine=True, eps=1e-06, normalized_shape=(96,)}:(tensor<1x56x56x96xf32>) -> tensor<1x56x56x96xf32>
	%41="ufront.transpose"(%40){perm=[0, 3, 1, 2]}:(tensor<1x56x56x96xf32>) -> tensor<1x96x56x56xf32>
	%42="ufront.conv2d"(%41){groups=1, kernel=[2, 2], pad=[0, 0], stride=[2, 2]}:(tensor<1x96x56x56xf32>) -> tensor<1x192x28x28xf32>
	%43="ufront.parameter"(%43){requires_grad=True}:(tensor<192x1x1xf32>) -> tensor<192x1x1xf32>
	%44="ufront.conv2d"(%42){groups=192, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%45="ufront.transpose"(%44){perm=[0, 2, 3, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x28x28x192xf32>
	%46="ufront.layer_norm"(%45){elementwise_affine=True, eps=1e-06, normalized_shape=(192,)}:(tensor<1x28x28x192xf32>) -> tensor<1x28x28x192xf32>
	%47="ufront.linear"(%46):(tensor<1x28x28x192xf32>) -> tensor<1x28x28x768xf32>
	%48="ufront.gelu"(%47):(tensor<1x28x28x768xf32>) -> tensor<1x28x28x768xf32>
	%49="ufront.linear"(%48):(tensor<1x28x28x768xf32>) -> tensor<1x28x28x192xf32>
	%50="ufront.transpose"(%49){perm=[0, 3, 1, 2]}:(tensor<1x28x28x192xf32>) -> tensor<1x192x28x28xf32>
	%51="ufront.multiply"(%43, %50):(tensor<192x1x1xf32>, tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%52="ufront.add"(%51, %42):(tensor<1x192x28x28xf32>, tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%53="ufront.parameter"(%53){requires_grad=True}:(tensor<192x1x1xf32>) -> tensor<192x1x1xf32>
	%54="ufront.conv2d"(%52){groups=192, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%55="ufront.transpose"(%54){perm=[0, 2, 3, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x28x28x192xf32>
	%56="ufront.layer_norm"(%55){elementwise_affine=True, eps=1e-06, normalized_shape=(192,)}:(tensor<1x28x28x192xf32>) -> tensor<1x28x28x192xf32>
	%57="ufront.linear"(%56):(tensor<1x28x28x192xf32>) -> tensor<1x28x28x768xf32>
	%58="ufront.gelu"(%57):(tensor<1x28x28x768xf32>) -> tensor<1x28x28x768xf32>
	%59="ufront.linear"(%58):(tensor<1x28x28x768xf32>) -> tensor<1x28x28x192xf32>
	%60="ufront.transpose"(%59){perm=[0, 3, 1, 2]}:(tensor<1x28x28x192xf32>) -> tensor<1x192x28x28xf32>
	%61="ufront.multiply"(%53, %60):(tensor<192x1x1xf32>, tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%62="ufront.add"(%61, %52):(tensor<1x192x28x28xf32>, tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%63="ufront.parameter"(%63){requires_grad=True}:(tensor<192x1x1xf32>) -> tensor<192x1x1xf32>
	%64="ufront.conv2d"(%62){groups=192, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%65="ufront.transpose"(%64){perm=[0, 2, 3, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x28x28x192xf32>
	%66="ufront.layer_norm"(%65){elementwise_affine=True, eps=1e-06, normalized_shape=(192,)}:(tensor<1x28x28x192xf32>) -> tensor<1x28x28x192xf32>
	%67="ufront.linear"(%66):(tensor<1x28x28x192xf32>) -> tensor<1x28x28x768xf32>
	%68="ufront.gelu"(%67):(tensor<1x28x28x768xf32>) -> tensor<1x28x28x768xf32>
	%69="ufront.linear"(%68):(tensor<1x28x28x768xf32>) -> tensor<1x28x28x192xf32>
	%70="ufront.transpose"(%69){perm=[0, 3, 1, 2]}:(tensor<1x28x28x192xf32>) -> tensor<1x192x28x28xf32>
	%71="ufront.multiply"(%63, %70):(tensor<192x1x1xf32>, tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%72="ufront.add"(%71, %62):(tensor<1x192x28x28xf32>, tensor<1x192x28x28xf32>) -> tensor<1x192x28x28xf32>
	%73="ufront.transpose"(%72){perm=[0, 2, 3, 1]}:(tensor<1x192x28x28xf32>) -> tensor<1x28x28x192xf32>
	%74="ufront.parameter"(%74){requires_grad=True}:(tensor<192xf32>) -> tensor<192xf32>
	%75="ufront.parameter"(%75){requires_grad=True}:(tensor<192xf32>) -> tensor<192xf32>
	%76="ufront.layer_norm"(%73){elementwise_affine=True, eps=1e-06, normalized_shape=(192,)}:(tensor<1x28x28x192xf32>) -> tensor<1x28x28x192xf32>
	%77="ufront.transpose"(%76){perm=[0, 3, 1, 2]}:(tensor<1x28x28x192xf32>) -> tensor<1x192x28x28xf32>
	%78="ufront.conv2d"(%77){groups=1, kernel=[2, 2], pad=[0, 0], stride=[2, 2]}:(tensor<1x192x28x28xf32>) -> tensor<1x384x14x14xf32>
	%79="ufront.parameter"(%79){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%80="ufront.conv2d"(%78){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%81="ufront.transpose"(%80){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%82="ufront.layer_norm"(%81){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%83="ufront.linear"(%82):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%84="ufront.gelu"(%83):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%85="ufront.linear"(%84):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%86="ufront.transpose"(%85){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%87="ufront.multiply"(%79, %86):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%88="ufront.add"(%87, %78):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%89="ufront.parameter"(%89){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%90="ufront.conv2d"(%88){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%91="ufront.transpose"(%90){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%92="ufront.layer_norm"(%91){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%93="ufront.linear"(%92):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%94="ufront.gelu"(%93):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%95="ufront.linear"(%94):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%96="ufront.transpose"(%95){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%97="ufront.multiply"(%89, %96):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%98="ufront.add"(%97, %88):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%99="ufront.parameter"(%99){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%100="ufront.conv2d"(%98){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%101="ufront.transpose"(%100){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%102="ufront.layer_norm"(%101){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%103="ufront.linear"(%102):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%104="ufront.gelu"(%103):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%105="ufront.linear"(%104):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%106="ufront.transpose"(%105){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%107="ufront.multiply"(%99, %106):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%108="ufront.add"(%107, %98):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%109="ufront.parameter"(%109){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%110="ufront.conv2d"(%108){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%111="ufront.transpose"(%110){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%112="ufront.layer_norm"(%111){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%113="ufront.linear"(%112):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%114="ufront.gelu"(%113):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%115="ufront.linear"(%114):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%116="ufront.transpose"(%115){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%117="ufront.multiply"(%109, %116):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%118="ufront.add"(%117, %108):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%119="ufront.parameter"(%119){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%120="ufront.conv2d"(%118){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%121="ufront.transpose"(%120){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%122="ufront.layer_norm"(%121){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%123="ufront.linear"(%122):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%124="ufront.gelu"(%123):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%125="ufront.linear"(%124):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%126="ufront.transpose"(%125){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%127="ufront.multiply"(%119, %126):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%128="ufront.add"(%127, %118):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%129="ufront.parameter"(%129){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%130="ufront.conv2d"(%128){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%131="ufront.transpose"(%130){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%132="ufront.layer_norm"(%131){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%133="ufront.linear"(%132):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%134="ufront.gelu"(%133):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%135="ufront.linear"(%134):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%136="ufront.transpose"(%135){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%137="ufront.multiply"(%129, %136):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%138="ufront.add"(%137, %128):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%139="ufront.parameter"(%139){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%140="ufront.conv2d"(%138){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%141="ufront.transpose"(%140){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%142="ufront.layer_norm"(%141){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%143="ufront.linear"(%142):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%144="ufront.gelu"(%143):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%145="ufront.linear"(%144):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%146="ufront.transpose"(%145){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%147="ufront.multiply"(%139, %146):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%148="ufront.add"(%147, %138):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%149="ufront.parameter"(%149){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%150="ufront.conv2d"(%148){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%151="ufront.transpose"(%150){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%152="ufront.layer_norm"(%151){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%153="ufront.linear"(%152):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%154="ufront.gelu"(%153):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%155="ufront.linear"(%154):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%156="ufront.transpose"(%155){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%157="ufront.multiply"(%149, %156):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%158="ufront.add"(%157, %148):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%159="ufront.parameter"(%159){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%160="ufront.conv2d"(%158){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%161="ufront.transpose"(%160){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%162="ufront.layer_norm"(%161){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%163="ufront.linear"(%162):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%164="ufront.gelu"(%163):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%165="ufront.linear"(%164):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%166="ufront.transpose"(%165){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%167="ufront.multiply"(%159, %166):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%168="ufront.add"(%167, %158):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%169="ufront.parameter"(%169){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%170="ufront.conv2d"(%168){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%171="ufront.transpose"(%170){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%172="ufront.layer_norm"(%171){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%173="ufront.linear"(%172):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%174="ufront.gelu"(%173):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%175="ufront.linear"(%174):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%176="ufront.transpose"(%175){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%177="ufront.multiply"(%169, %176):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%178="ufront.add"(%177, %168):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%179="ufront.parameter"(%179){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%180="ufront.conv2d"(%178){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%181="ufront.transpose"(%180){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%182="ufront.layer_norm"(%181){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%183="ufront.linear"(%182):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%184="ufront.gelu"(%183):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%185="ufront.linear"(%184):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%186="ufront.transpose"(%185){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%187="ufront.multiply"(%179, %186):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%188="ufront.add"(%187, %178):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%189="ufront.parameter"(%189){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%190="ufront.conv2d"(%188){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%191="ufront.transpose"(%190){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%192="ufront.layer_norm"(%191){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%193="ufront.linear"(%192):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%194="ufront.gelu"(%193):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%195="ufront.linear"(%194):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%196="ufront.transpose"(%195){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%197="ufront.multiply"(%189, %196):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%198="ufront.add"(%197, %188):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%199="ufront.parameter"(%199){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%200="ufront.conv2d"(%198){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%201="ufront.transpose"(%200){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%202="ufront.layer_norm"(%201){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%203="ufront.linear"(%202):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%204="ufront.gelu"(%203):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%205="ufront.linear"(%204):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%206="ufront.transpose"(%205){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%207="ufront.multiply"(%199, %206):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%208="ufront.add"(%207, %198):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%209="ufront.parameter"(%209){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%210="ufront.conv2d"(%208){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%211="ufront.transpose"(%210){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%212="ufront.layer_norm"(%211){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%213="ufront.linear"(%212):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%214="ufront.gelu"(%213):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%215="ufront.linear"(%214):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%216="ufront.transpose"(%215){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%217="ufront.multiply"(%209, %216):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%218="ufront.add"(%217, %208):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%219="ufront.parameter"(%219){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%220="ufront.conv2d"(%218){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%221="ufront.transpose"(%220){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%222="ufront.layer_norm"(%221){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%223="ufront.linear"(%222):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%224="ufront.gelu"(%223):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%225="ufront.linear"(%224):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%226="ufront.transpose"(%225){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%227="ufront.multiply"(%219, %226):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%228="ufront.add"(%227, %218):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%229="ufront.parameter"(%229){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%230="ufront.conv2d"(%228){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%231="ufront.transpose"(%230){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%232="ufront.layer_norm"(%231){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%233="ufront.linear"(%232):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%234="ufront.gelu"(%233):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%235="ufront.linear"(%234):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%236="ufront.transpose"(%235){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%237="ufront.multiply"(%229, %236):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%238="ufront.add"(%237, %228):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%239="ufront.parameter"(%239){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%240="ufront.conv2d"(%238){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%241="ufront.transpose"(%240){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%242="ufront.layer_norm"(%241){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%243="ufront.linear"(%242):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%244="ufront.gelu"(%243):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%245="ufront.linear"(%244):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%246="ufront.transpose"(%245){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%247="ufront.multiply"(%239, %246):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%248="ufront.add"(%247, %238):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%249="ufront.parameter"(%249){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%250="ufront.conv2d"(%248){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%251="ufront.transpose"(%250){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%252="ufront.layer_norm"(%251){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%253="ufront.linear"(%252):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%254="ufront.gelu"(%253):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%255="ufront.linear"(%254):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%256="ufront.transpose"(%255){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%257="ufront.multiply"(%249, %256):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%258="ufront.add"(%257, %248):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%259="ufront.parameter"(%259){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%260="ufront.conv2d"(%258){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%261="ufront.transpose"(%260){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%262="ufront.layer_norm"(%261){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%263="ufront.linear"(%262):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%264="ufront.gelu"(%263):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%265="ufront.linear"(%264):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%266="ufront.transpose"(%265){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%267="ufront.multiply"(%259, %266):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%268="ufront.add"(%267, %258):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%269="ufront.parameter"(%269){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%270="ufront.conv2d"(%268){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%271="ufront.transpose"(%270){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%272="ufront.layer_norm"(%271){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%273="ufront.linear"(%272):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%274="ufront.gelu"(%273):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%275="ufront.linear"(%274):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%276="ufront.transpose"(%275){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%277="ufront.multiply"(%269, %276):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%278="ufront.add"(%277, %268):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%279="ufront.parameter"(%279){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%280="ufront.conv2d"(%278){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%281="ufront.transpose"(%280){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%282="ufront.layer_norm"(%281){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%283="ufront.linear"(%282):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%284="ufront.gelu"(%283):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%285="ufront.linear"(%284):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%286="ufront.transpose"(%285){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%287="ufront.multiply"(%279, %286):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%288="ufront.add"(%287, %278):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%289="ufront.parameter"(%289){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%290="ufront.conv2d"(%288){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%291="ufront.transpose"(%290){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%292="ufront.layer_norm"(%291){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%293="ufront.linear"(%292):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%294="ufront.gelu"(%293):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%295="ufront.linear"(%294):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%296="ufront.transpose"(%295){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%297="ufront.multiply"(%289, %296):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%298="ufront.add"(%297, %288):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%299="ufront.parameter"(%299){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%300="ufront.conv2d"(%298){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%301="ufront.transpose"(%300){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%302="ufront.layer_norm"(%301){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%303="ufront.linear"(%302):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%304="ufront.gelu"(%303):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%305="ufront.linear"(%304):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%306="ufront.transpose"(%305){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%307="ufront.multiply"(%299, %306):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%308="ufront.add"(%307, %298):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%309="ufront.parameter"(%309){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%310="ufront.conv2d"(%308){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%311="ufront.transpose"(%310){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%312="ufront.layer_norm"(%311){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%313="ufront.linear"(%312):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%314="ufront.gelu"(%313):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%315="ufront.linear"(%314):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%316="ufront.transpose"(%315){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%317="ufront.multiply"(%309, %316):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%318="ufront.add"(%317, %308):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%319="ufront.parameter"(%319){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%320="ufront.conv2d"(%318){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%321="ufront.transpose"(%320){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%322="ufront.layer_norm"(%321){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%323="ufront.linear"(%322):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%324="ufront.gelu"(%323):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%325="ufront.linear"(%324):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%326="ufront.transpose"(%325){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%327="ufront.multiply"(%319, %326):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%328="ufront.add"(%327, %318):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%329="ufront.parameter"(%329){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%330="ufront.conv2d"(%328){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%331="ufront.transpose"(%330){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%332="ufront.layer_norm"(%331){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%333="ufront.linear"(%332):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%334="ufront.gelu"(%333):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%335="ufront.linear"(%334):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%336="ufront.transpose"(%335){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%337="ufront.multiply"(%329, %336):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%338="ufront.add"(%337, %328):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%339="ufront.parameter"(%339){requires_grad=True}:(tensor<384x1x1xf32>) -> tensor<384x1x1xf32>
	%340="ufront.conv2d"(%338){groups=384, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%341="ufront.transpose"(%340){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%342="ufront.layer_norm"(%341){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%343="ufront.linear"(%342):(tensor<1x14x14x384xf32>) -> tensor<1x14x14x1536xf32>
	%344="ufront.gelu"(%343):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x1536xf32>
	%345="ufront.linear"(%344):(tensor<1x14x14x1536xf32>) -> tensor<1x14x14x384xf32>
	%346="ufront.transpose"(%345){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%347="ufront.multiply"(%339, %346):(tensor<384x1x1xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%348="ufront.add"(%347, %338):(tensor<1x384x14x14xf32>, tensor<1x384x14x14xf32>) -> tensor<1x384x14x14xf32>
	%349="ufront.transpose"(%348){perm=[0, 2, 3, 1]}:(tensor<1x384x14x14xf32>) -> tensor<1x14x14x384xf32>
	%350="ufront.parameter"(%350){requires_grad=True}:(tensor<384xf32>) -> tensor<384xf32>
	%351="ufront.parameter"(%351){requires_grad=True}:(tensor<384xf32>) -> tensor<384xf32>
	%352="ufront.layer_norm"(%349){elementwise_affine=True, eps=1e-06, normalized_shape=(384,)}:(tensor<1x14x14x384xf32>) -> tensor<1x14x14x384xf32>
	%353="ufront.transpose"(%352){perm=[0, 3, 1, 2]}:(tensor<1x14x14x384xf32>) -> tensor<1x384x14x14xf32>
	%354="ufront.conv2d"(%353){groups=1, kernel=[2, 2], pad=[0, 0], stride=[2, 2]}:(tensor<1x384x14x14xf32>) -> tensor<1x768x7x7xf32>
	%355="ufront.parameter"(%355){requires_grad=True}:(tensor<768x1x1xf32>) -> tensor<768x1x1xf32>
	%356="ufront.conv2d"(%354){groups=768, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%357="ufront.transpose"(%356){perm=[0, 2, 3, 1]}:(tensor<1x768x7x7xf32>) -> tensor<1x7x7x768xf32>
	%358="ufront.layer_norm"(%357){elementwise_affine=True, eps=1e-06, normalized_shape=(768,)}:(tensor<1x7x7x768xf32>) -> tensor<1x7x7x768xf32>
	%359="ufront.linear"(%358):(tensor<1x7x7x768xf32>) -> tensor<1x7x7x3072xf32>
	%360="ufront.gelu"(%359):(tensor<1x7x7x3072xf32>) -> tensor<1x7x7x3072xf32>
	%361="ufront.linear"(%360):(tensor<1x7x7x3072xf32>) -> tensor<1x7x7x768xf32>
	%362="ufront.transpose"(%361){perm=[0, 3, 1, 2]}:(tensor<1x7x7x768xf32>) -> tensor<1x768x7x7xf32>
	%363="ufront.multiply"(%355, %362):(tensor<768x1x1xf32>, tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%364="ufront.add"(%363, %354):(tensor<1x768x7x7xf32>, tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%365="ufront.parameter"(%365){requires_grad=True}:(tensor<768x1x1xf32>) -> tensor<768x1x1xf32>
	%366="ufront.conv2d"(%364){groups=768, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%367="ufront.transpose"(%366){perm=[0, 2, 3, 1]}:(tensor<1x768x7x7xf32>) -> tensor<1x7x7x768xf32>
	%368="ufront.layer_norm"(%367){elementwise_affine=True, eps=1e-06, normalized_shape=(768,)}:(tensor<1x7x7x768xf32>) -> tensor<1x7x7x768xf32>
	%369="ufront.linear"(%368):(tensor<1x7x7x768xf32>) -> tensor<1x7x7x3072xf32>
	%370="ufront.gelu"(%369):(tensor<1x7x7x3072xf32>) -> tensor<1x7x7x3072xf32>
	%371="ufront.linear"(%370):(tensor<1x7x7x3072xf32>) -> tensor<1x7x7x768xf32>
	%372="ufront.transpose"(%371){perm=[0, 3, 1, 2]}:(tensor<1x7x7x768xf32>) -> tensor<1x768x7x7xf32>
	%373="ufront.multiply"(%365, %372):(tensor<768x1x1xf32>, tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%374="ufront.add"(%373, %364):(tensor<1x768x7x7xf32>, tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%375="ufront.parameter"(%375){requires_grad=True}:(tensor<768x1x1xf32>) -> tensor<768x1x1xf32>
	%376="ufront.conv2d"(%374){groups=768, kernel=[7, 7], pad=[3, 3], stride=[1, 1]}:(tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%377="ufront.transpose"(%376){perm=[0, 2, 3, 1]}:(tensor<1x768x7x7xf32>) -> tensor<1x7x7x768xf32>
	%378="ufront.layer_norm"(%377){elementwise_affine=True, eps=1e-06, normalized_shape=(768,)}:(tensor<1x7x7x768xf32>) -> tensor<1x7x7x768xf32>
	%379="ufront.linear"(%378):(tensor<1x7x7x768xf32>) -> tensor<1x7x7x3072xf32>
	%380="ufront.gelu"(%379):(tensor<1x7x7x3072xf32>) -> tensor<1x7x7x3072xf32>
	%381="ufront.linear"(%380):(tensor<1x7x7x3072xf32>) -> tensor<1x7x7x768xf32>
	%382="ufront.transpose"(%381){perm=[0, 3, 1, 2]}:(tensor<1x7x7x768xf32>) -> tensor<1x768x7x7xf32>
	%383="ufront.multiply"(%375, %382):(tensor<768x1x1xf32>, tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%384="ufront.add"(%383, %374):(tensor<1x768x7x7xf32>, tensor<1x768x7x7xf32>) -> tensor<1x768x7x7xf32>
	%385="ufront.pool2d"(%384){output_size=[1, 1], pool_type="POOL_ADAPTIVE"}:(tensor<1x768x7x7xf32>) -> tensor<1x768x1x1xf32>
	%386="ufront.transpose"(%385){perm=[0, 2, 3, 1]}:(tensor<1x768x1x1xf32>) -> tensor<1x1x1x768xf32>
	%387="ufront.parameter"(%387){requires_grad=True}:(tensor<768xf32>) -> tensor<768xf32>
	%388="ufront.parameter"(%388){requires_grad=True}:(tensor<768xf32>) -> tensor<768xf32>
	%389="ufront.layer_norm"(%386){elementwise_affine=True, eps=1e-06, normalized_shape=(768,)}:(tensor<1x1x1x768xf32>) -> tensor<1x1x1x768xf32>
	%390="ufront.transpose"(%389){perm=[0, 3, 1, 2]}:(tensor<1x1x1x768xf32>) -> tensor<1x768x1x1xf32>
	%391="ufront.flat"(%390):(tensor<1x768x1x1xf32>) -> tensor<1x768xf32>
	%392="ufront.linear"(%391):(tensor<1x768xf32>) -> tensor<1x1000xf32>
	%393="ufront.softmax"(%392):(tensor<1x1000xf32>) -> tensor<1x1000xf32>
	return %393: tensor<1x1000xf32>
}