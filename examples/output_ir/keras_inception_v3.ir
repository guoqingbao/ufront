func.func @forward(%input_1: tensor<1x3x224x224xf32>) -> tensor<1x1000xf32>  { 
	%1="ufront.parameter"(){dtype="Float", initializer="0x5585add14ca0", requires_grad=true}:() -> tensor<32x3x3x3xf32>
	%2="ufront.parameter"(){dtype="Float", initializer="0x5585b658cf40", requires_grad=true}:() -> tensor<32xf32>
	%3="ufront.conv2d"(%input_1, %1, %2){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[2, 2]}:(tensor<1x3x224x224xf32>, tensor<32x3x3x3xf32>, tensor<32xf32>) -> tensor<1x32x111x111xf32>
	%4="ufront.relu"(%3):(tensor<1x32x111x111xf32>) -> tensor<1x32x111x111xf32>
	%5="ufront.parameter"(){dtype="Float", initializer="0x5585edf881d0", requires_grad=true}:() -> tensor<32x32x3x3xf32>
	%6="ufront.parameter"(){dtype="Float", initializer="0x5585f26ef150", requires_grad=true}:() -> tensor<32xf32>
	%7="ufront.conv2d"(%4, %5, %6){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x32x111x111xf32>, tensor<32x32x3x3xf32>, tensor<32xf32>) -> tensor<1x32x109x109xf32>
	%8="ufront.relu"(%7):(tensor<1x32x109x109xf32>) -> tensor<1x32x109x109xf32>
	%9="ufront.parameter"(){dtype="Float", initializer="0x5585e8294ff0", requires_grad=true}:() -> tensor<64x32x3x3xf32>
	%10="ufront.parameter"(){dtype="Float", initializer="0x5585b5944240", requires_grad=true}:() -> tensor<64xf32>
	%11="ufront.conv2d"(%8, %9, %10){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x32x109x109xf32>, tensor<64x32x3x3xf32>, tensor<64xf32>) -> tensor<1x64x109x109xf32>
	%12="ufront.relu"(%11):(tensor<1x64x109x109xf32>) -> tensor<1x64x109x109xf32>
	%13="ufront.pool2d"(%12){kernel=[3, 3], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x64x109x109xf32>) -> tensor<1x64x54x54xf32>
	%14="ufront.parameter"(){dtype="Float", initializer="0x5585ee0a4ef0", requires_grad=true}:() -> tensor<80x64x1x1xf32>
	%15="ufront.parameter"(){dtype="Float", initializer="0x5585e8289fd0", requires_grad=true}:() -> tensor<80xf32>
	%16="ufront.conv2d"(%13, %14, %15){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x64x54x54xf32>, tensor<80x64x1x1xf32>, tensor<80xf32>) -> tensor<1x80x54x54xf32>
	%17="ufront.relu"(%16):(tensor<1x80x54x54xf32>) -> tensor<1x80x54x54xf32>
	%18="ufront.parameter"(){dtype="Float", initializer="0x5585f2a449c0", requires_grad=true}:() -> tensor<192x80x3x3xf32>
	%19="ufront.parameter"(){dtype="Float", initializer="0x5585b4399390", requires_grad=true}:() -> tensor<192xf32>
	%20="ufront.conv2d"(%17, %18, %19){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x80x54x54xf32>, tensor<192x80x3x3xf32>, tensor<192xf32>) -> tensor<1x192x52x52xf32>
	%21="ufront.relu"(%20):(tensor<1x192x52x52xf32>) -> tensor<1x192x52x52xf32>
	%22="ufront.pool2d"(%21){kernel=[3, 3], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x192x52x52xf32>) -> tensor<1x192x25x25xf32>
	%23="ufront.parameter"(){dtype="Float", initializer="0x5585b62e77b0", requires_grad=true}:() -> tensor<64x192x1x1xf32>
	%24="ufront.parameter"(){dtype="Float", initializer="0x5585bbf0afc0", requires_grad=true}:() -> tensor<64xf32>
	%25="ufront.conv2d"(%22, %23, %24){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x192x25x25xf32>, tensor<64x192x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%26="ufront.relu"(%25):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%27="ufront.parameter"(){dtype="Float", initializer="0x5585ee3f7cf0", requires_grad=true}:() -> tensor<96x64x3x3xf32>
	%28="ufront.parameter"(){dtype="Float", initializer="0x5585ee0e18c0", requires_grad=true}:() -> tensor<96xf32>
	%29="ufront.conv2d"(%26, %27, %28){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x64x25x25xf32>, tensor<96x64x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%30="ufront.relu"(%29):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%31="ufront.parameter"(){dtype="Float", initializer="0x5585b43a2010", requires_grad=true}:() -> tensor<96x96x3x3xf32>
	%32="ufront.parameter"(){dtype="Float", initializer="0x5585ee0e1ac0", requires_grad=true}:() -> tensor<96xf32>
	%33="ufront.conv2d"(%30, %31, %32){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x96x25x25xf32>, tensor<96x96x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%34="ufront.relu"(%33):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%35="ufront.parameter"(){dtype="Float", initializer="0x5585d06b8610", requires_grad=true}:() -> tensor<48x192x1x1xf32>
	%36="ufront.parameter"(){dtype="Float", initializer="0x5585add82930", requires_grad=true}:() -> tensor<48xf32>
	%37="ufront.conv2d"(%22, %35, %36){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x192x25x25xf32>, tensor<48x192x1x1xf32>, tensor<48xf32>) -> tensor<1x48x25x25xf32>
	%38="ufront.relu"(%37):(tensor<1x48x25x25xf32>) -> tensor<1x48x25x25xf32>
	%39="ufront.parameter"(){dtype="Float", initializer="0x5585e8574a10", requires_grad=true}:() -> tensor<64x48x5x5xf32>
	%40="ufront.parameter"(){dtype="Float", initializer="0x5585bbf0bac0", requires_grad=true}:() -> tensor<64xf32>
	%41="ufront.conv2d"(%38, %39, %40){dilation=[1, 1], groups=1, kernel=[5, 5], operand_segment_sizes=array<i32:1, 1, 1>, pad=[2, 2, 2, 2], stride=[1, 1]}:(tensor<1x48x25x25xf32>, tensor<64x48x5x5xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%42="ufront.relu"(%41):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%43="ufront.parameter"(){dtype="Float", initializer="0x5585b42fa2f0", requires_grad=true}:() -> tensor<64x192x1x1xf32>
	%44="ufront.parameter"(){dtype="Float", initializer="0x5585aea11a20", requires_grad=true}:() -> tensor<64xf32>
	%45="ufront.conv2d"(%22, %43, %44){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x192x25x25xf32>, tensor<64x192x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%46="ufront.relu"(%45):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%47="ufront.pool2d"(%22){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x192x25x25xf32>) -> tensor<1x192x25x25xf32>
	%48="ufront.parameter"(){dtype="Float", initializer="0x5585b41b1090", requires_grad=true}:() -> tensor<32x192x1x1xf32>
	%49="ufront.parameter"(){dtype="Float", initializer="0x5585a2cf8c50", requires_grad=true}:() -> tensor<32xf32>
	%50="ufront.conv2d"(%47, %48, %49){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x192x25x25xf32>, tensor<32x192x1x1xf32>, tensor<32xf32>) -> tensor<1x32x25x25xf32>
	%51="ufront.relu"(%50):(tensor<1x32x25x25xf32>) -> tensor<1x32x25x25xf32>
	%52="ufront.concat"(%46, %42, %34, %51){axis=1}:(tensor<1x64x25x25xf32>, tensor<1x64x25x25xf32>, tensor<1x96x25x25xf32>, tensor<1x32x25x25xf32>) -> tensor<1x256x25x25xf32>
	%53="ufront.parameter"(){dtype="Float", initializer="0x5585f2321730", requires_grad=true}:() -> tensor<64x256x1x1xf32>
	%54="ufront.parameter"(){dtype="Float", initializer="0x5585edfa47c0", requires_grad=true}:() -> tensor<64xf32>
	%55="ufront.conv2d"(%52, %53, %54){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x256x25x25xf32>, tensor<64x256x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%56="ufront.relu"(%55):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%57="ufront.parameter"(){dtype="Float", initializer="0x5585c4df8a50", requires_grad=true}:() -> tensor<96x64x3x3xf32>
	%58="ufront.parameter"(){dtype="Float", initializer="0x5585adeb1940", requires_grad=true}:() -> tensor<96xf32>
	%59="ufront.conv2d"(%56, %57, %58){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x64x25x25xf32>, tensor<96x64x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%60="ufront.relu"(%59):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%61="ufront.parameter"(){dtype="Float", initializer="0x5585b8f97b10", requires_grad=true}:() -> tensor<96x96x3x3xf32>
	%62="ufront.parameter"(){dtype="Float", initializer="0x5585b5fc0810", requires_grad=true}:() -> tensor<96xf32>
	%63="ufront.conv2d"(%60, %61, %62){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x96x25x25xf32>, tensor<96x96x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%64="ufront.relu"(%63):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%65="ufront.parameter"(){dtype="Float", initializer="0x5585aea643a0", requires_grad=true}:() -> tensor<48x256x1x1xf32>
	%66="ufront.parameter"(){dtype="Float", initializer="0x5585a27ad200", requires_grad=true}:() -> tensor<48xf32>
	%67="ufront.conv2d"(%52, %65, %66){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x256x25x25xf32>, tensor<48x256x1x1xf32>, tensor<48xf32>) -> tensor<1x48x25x25xf32>
	%68="ufront.relu"(%67):(tensor<1x48x25x25xf32>) -> tensor<1x48x25x25xf32>
	%69="ufront.parameter"(){dtype="Float", initializer="0x5585ba9242c0", requires_grad=true}:() -> tensor<64x48x5x5xf32>
	%70="ufront.parameter"(){dtype="Float", initializer="0x5585edf91ac0", requires_grad=true}:() -> tensor<64xf32>
	%71="ufront.conv2d"(%68, %69, %70){dilation=[1, 1], groups=1, kernel=[5, 5], operand_segment_sizes=array<i32:1, 1, 1>, pad=[2, 2, 2, 2], stride=[1, 1]}:(tensor<1x48x25x25xf32>, tensor<64x48x5x5xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%72="ufront.relu"(%71):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%73="ufront.parameter"(){dtype="Float", initializer="0x5585ba9ac280", requires_grad=true}:() -> tensor<64x256x1x1xf32>
	%74="ufront.parameter"(){dtype="Float", initializer="0x5585a2e6ecb0", requires_grad=true}:() -> tensor<64xf32>
	%75="ufront.conv2d"(%52, %73, %74){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x256x25x25xf32>, tensor<64x256x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%76="ufront.relu"(%75):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%77="ufront.pool2d"(%52){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x256x25x25xf32>) -> tensor<1x256x25x25xf32>
	%78="ufront.parameter"(){dtype="Float", initializer="0x5585cc05a430", requires_grad=true}:() -> tensor<64x256x1x1xf32>
	%79="ufront.parameter"(){dtype="Float", initializer="0x5585b5747770", requires_grad=true}:() -> tensor<64xf32>
	%80="ufront.conv2d"(%77, %78, %79){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x256x25x25xf32>, tensor<64x256x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%81="ufront.relu"(%80):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%82="ufront.concat"(%76, %72, %64, %81){axis=1}:(tensor<1x64x25x25xf32>, tensor<1x64x25x25xf32>, tensor<1x96x25x25xf32>, tensor<1x64x25x25xf32>) -> tensor<1x288x25x25xf32>
	%83="ufront.parameter"(){dtype="Float", initializer="0x5585b8fe8b20", requires_grad=true}:() -> tensor<64x288x1x1xf32>
	%84="ufront.parameter"(){dtype="Float", initializer="0x5585b4abae00", requires_grad=true}:() -> tensor<64xf32>
	%85="ufront.conv2d"(%82, %83, %84){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x288x25x25xf32>, tensor<64x288x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%86="ufront.relu"(%85):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%87="ufront.parameter"(){dtype="Float", initializer="0x5585baf54490", requires_grad=true}:() -> tensor<96x64x3x3xf32>
	%88="ufront.parameter"(){dtype="Float", initializer="0x5585b5fc14b0", requires_grad=true}:() -> tensor<96xf32>
	%89="ufront.conv2d"(%86, %87, %88){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x64x25x25xf32>, tensor<96x64x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%90="ufront.relu"(%89):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%91="ufront.parameter"(){dtype="Float", initializer="0x5585b58ad120", requires_grad=true}:() -> tensor<96x96x3x3xf32>
	%92="ufront.parameter"(){dtype="Float", initializer="0x5585adeb2820", requires_grad=true}:() -> tensor<96xf32>
	%93="ufront.conv2d"(%90, %91, %92){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x96x25x25xf32>, tensor<96x96x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%94="ufront.relu"(%93):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%95="ufront.parameter"(){dtype="Float", initializer="0x5585ee0e2d10", requires_grad=true}:() -> tensor<48x288x1x1xf32>
	%96="ufront.parameter"(){dtype="Float", initializer="0x5585a3d9fa40", requires_grad=true}:() -> tensor<48xf32>
	%97="ufront.conv2d"(%82, %95, %96){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x288x25x25xf32>, tensor<48x288x1x1xf32>, tensor<48xf32>) -> tensor<1x48x25x25xf32>
	%98="ufront.relu"(%97):(tensor<1x48x25x25xf32>) -> tensor<1x48x25x25xf32>
	%99="ufront.parameter"(){dtype="Float", initializer="0x5585b5bde110", requires_grad=true}:() -> tensor<64x48x5x5xf32>
	%100="ufront.parameter"(){dtype="Float", initializer="0x5585e8294de0", requires_grad=true}:() -> tensor<64xf32>
	%101="ufront.conv2d"(%98, %99, %100){dilation=[1, 1], groups=1, kernel=[5, 5], operand_segment_sizes=array<i32:1, 1, 1>, pad=[2, 2, 2, 2], stride=[1, 1]}:(tensor<1x48x25x25xf32>, tensor<64x48x5x5xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%102="ufront.relu"(%101):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%103="ufront.parameter"(){dtype="Float", initializer="0x5585b58fe130", requires_grad=true}:() -> tensor<64x288x1x1xf32>
	%104="ufront.parameter"(){dtype="Float", initializer="0x5585a3a222a0", requires_grad=true}:() -> tensor<64xf32>
	%105="ufront.conv2d"(%82, %103, %104){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x288x25x25xf32>, tensor<64x288x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%106="ufront.relu"(%105):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%107="ufront.pool2d"(%82){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x288x25x25xf32>) -> tensor<1x288x25x25xf32>
	%108="ufront.parameter"(){dtype="Float", initializer="0x5585fcc4d070", requires_grad=true}:() -> tensor<64x288x1x1xf32>
	%109="ufront.parameter"(){dtype="Float", initializer="0x5585a2ea7230", requires_grad=true}:() -> tensor<64xf32>
	%110="ufront.conv2d"(%107, %108, %109){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x288x25x25xf32>, tensor<64x288x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%111="ufront.relu"(%110):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%112="ufront.concat"(%106, %102, %94, %111){axis=1}:(tensor<1x64x25x25xf32>, tensor<1x64x25x25xf32>, tensor<1x96x25x25xf32>, tensor<1x64x25x25xf32>) -> tensor<1x288x25x25xf32>
	%113="ufront.pool2d"(%112){kernel=[3, 3], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x288x25x25xf32>) -> tensor<1x288x12x12xf32>
	%114="ufront.parameter"(){dtype="Float", initializer="0x5585e8432790", requires_grad=true}:() -> tensor<64x288x1x1xf32>
	%115="ufront.parameter"(){dtype="Float", initializer="0x5585a1fd6250", requires_grad=true}:() -> tensor<64xf32>
	%116="ufront.conv2d"(%112, %114, %115){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x288x25x25xf32>, tensor<64x288x1x1xf32>, tensor<64xf32>) -> tensor<1x64x25x25xf32>
	%117="ufront.relu"(%116):(tensor<1x64x25x25xf32>) -> tensor<1x64x25x25xf32>
	%118="ufront.parameter"(){dtype="Float", initializer="0x5585b4553100", requires_grad=true}:() -> tensor<96x64x3x3xf32>
	%119="ufront.parameter"(){dtype="Float", initializer="0x5585ee0e2280", requires_grad=true}:() -> tensor<96xf32>
	%120="ufront.conv2d"(%117, %118, %119){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x64x25x25xf32>, tensor<96x64x3x3xf32>, tensor<96xf32>) -> tensor<1x96x25x25xf32>
	%121="ufront.relu"(%120):(tensor<1x96x25x25xf32>) -> tensor<1x96x25x25xf32>
	%122="ufront.parameter"(){dtype="Float", initializer="0x5585f3ef9400", requires_grad=true}:() -> tensor<96x96x3x3xf32>
	%123="ufront.parameter"(){dtype="Float", initializer="0x5585ee0e2840", requires_grad=true}:() -> tensor<96xf32>
	%124="ufront.conv2d"(%121, %122, %123){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[2, 2]}:(tensor<1x96x25x25xf32>, tensor<96x96x3x3xf32>, tensor<96xf32>) -> tensor<1x96x12x12xf32>
	%125="ufront.relu"(%124):(tensor<1x96x12x12xf32>) -> tensor<1x96x12x12xf32>
	%126="ufront.parameter"(){dtype="Float", initializer="0x5585ef11c270", requires_grad=true}:() -> tensor<384x288x3x3xf32>
	%127="ufront.parameter"(){dtype="Float", initializer="0x5585ee0a4640", requires_grad=true}:() -> tensor<384xf32>
	%128="ufront.conv2d"(%112, %126, %127){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[2, 2]}:(tensor<1x288x25x25xf32>, tensor<384x288x3x3xf32>, tensor<384xf32>) -> tensor<1x384x12x12xf32>
	%129="ufront.relu"(%128):(tensor<1x384x12x12xf32>) -> tensor<1x384x12x12xf32>
	%130="ufront.concat"(%129, %125, %113){axis=1}:(tensor<1x384x12x12xf32>, tensor<1x96x12x12xf32>, tensor<1x288x12x12xf32>) -> tensor<1x768x12x12xf32>
	%131="ufront.parameter"(){dtype="Float", initializer="0x5585c4e3b890", requires_grad=true}:() -> tensor<128x768x1x1xf32>
	%132="ufront.parameter"(){dtype="Float", initializer="0x5585add9e7d0", requires_grad=true}:() -> tensor<128xf32>
	%133="ufront.conv2d"(%130, %131, %132){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<128x768x1x1xf32>, tensor<128xf32>) -> tensor<1x128x12x12xf32>
	%134="ufront.relu"(%133):(tensor<1x128x12x12xf32>) -> tensor<1x128x12x12xf32>
	%135="ufront.parameter"(){dtype="Float", initializer="0x5585e82ae080", requires_grad=true}:() -> tensor<128x128x7x1xf32>
	%136="ufront.parameter"(){dtype="Float", initializer="0x5585edfd66a0", requires_grad=true}:() -> tensor<128xf32>
	%137="ufront.conv2d"(%134, %135, %136){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x128x12x12xf32>, tensor<128x128x7x1xf32>, tensor<128xf32>) -> tensor<1x128x12x12xf32>
	%138="ufront.relu"(%137):(tensor<1x128x12x12xf32>) -> tensor<1x128x12x12xf32>
	%139="ufront.parameter"(){dtype="Float", initializer="0x5585b5094110", requires_grad=true}:() -> tensor<128x128x1x7xf32>
	%140="ufront.parameter"(){dtype="Float", initializer="0x5585f3ef5220", requires_grad=true}:() -> tensor<128xf32>
	%141="ufront.conv2d"(%138, %139, %140){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x128x12x12xf32>, tensor<128x128x1x7xf32>, tensor<128xf32>) -> tensor<1x128x12x12xf32>
	%142="ufront.relu"(%141):(tensor<1x128x12x12xf32>) -> tensor<1x128x12x12xf32>
	%143="ufront.parameter"(){dtype="Float", initializer="0x5585b5174130", requires_grad=true}:() -> tensor<128x128x7x1xf32>
	%144="ufront.parameter"(){dtype="Float", initializer="0x5585f9aaab40", requires_grad=true}:() -> tensor<128xf32>
	%145="ufront.conv2d"(%142, %143, %144){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x128x12x12xf32>, tensor<128x128x7x1xf32>, tensor<128xf32>) -> tensor<1x128x12x12xf32>
	%146="ufront.relu"(%145):(tensor<1x128x12x12xf32>) -> tensor<1x128x12x12xf32>
	%147="ufront.parameter"(){dtype="Float", initializer="0x5585ef6c4500", requires_grad=true}:() -> tensor<192x128x1x7xf32>
	%148="ufront.parameter"(){dtype="Float", initializer="0x5585ee050c80", requires_grad=true}:() -> tensor<192xf32>
	%149="ufront.conv2d"(%146, %147, %148){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x128x12x12xf32>, tensor<192x128x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%150="ufront.relu"(%149):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%151="ufront.parameter"(){dtype="Float", initializer="0x5585b99c5ab0", requires_grad=true}:() -> tensor<128x768x1x1xf32>
	%152="ufront.parameter"(){dtype="Float", initializer="0x55859b4a4d30", requires_grad=true}:() -> tensor<128xf32>
	%153="ufront.conv2d"(%130, %151, %152){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<128x768x1x1xf32>, tensor<128xf32>) -> tensor<1x128x12x12xf32>
	%154="ufront.relu"(%153):(tensor<1x128x12x12xf32>) -> tensor<1x128x12x12xf32>
	%155="ufront.parameter"(){dtype="Float", initializer="0x5585ef5b0d70", requires_grad=true}:() -> tensor<128x128x1x7xf32>
	%156="ufront.parameter"(){dtype="Float", initializer="0x5585adcadf80", requires_grad=true}:() -> tensor<128xf32>
	%157="ufront.conv2d"(%154, %155, %156){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x128x12x12xf32>, tensor<128x128x1x7xf32>, tensor<128xf32>) -> tensor<1x128x12x12xf32>
	%158="ufront.relu"(%157):(tensor<1x128x12x12xf32>) -> tensor<1x128x12x12xf32>
	%159="ufront.parameter"(){dtype="Float", initializer="0x5585b78f8200", requires_grad=true}:() -> tensor<192x128x7x1xf32>
	%160="ufront.parameter"(){dtype="Float", initializer="0x5585ee051580", requires_grad=true}:() -> tensor<192xf32>
	%161="ufront.conv2d"(%158, %159, %160){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x128x12x12xf32>, tensor<192x128x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%162="ufront.relu"(%161):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%163="ufront.parameter"(){dtype="Float", initializer="0x5585ef620d80", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%164="ufront.parameter"(){dtype="Float", initializer="0x5585edf87a00", requires_grad=true}:() -> tensor<192xf32>
	%165="ufront.conv2d"(%130, %163, %164){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%166="ufront.relu"(%165):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%167="ufront.pool2d"(%130){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x768x12x12xf32>) -> tensor<1x768x12x12xf32>
	%168="ufront.parameter"(){dtype="Float", initializer="0x5585b79a0210", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%169="ufront.parameter"(){dtype="Float", initializer="0x5585adec13f0", requires_grad=true}:() -> tensor<192xf32>
	%170="ufront.conv2d"(%167, %168, %169){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%171="ufront.relu"(%170):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%172="ufront.concat"(%166, %162, %150, %171){axis=1}:(tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>) -> tensor<1x768x12x12xf32>
	%173="ufront.parameter"(){dtype="Float", initializer="0x5585ef8c5c80", requires_grad=true}:() -> tensor<160x768x1x1xf32>
	%174="ufront.parameter"(){dtype="Float", initializer="0x5585adec1f80", requires_grad=true}:() -> tensor<160xf32>
	%175="ufront.conv2d"(%172, %173, %174){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<160x768x1x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%176="ufront.relu"(%175):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%177="ufront.parameter"(){dtype="Float", initializer="0x5585efad5cc0", requires_grad=true}:() -> tensor<160x160x7x1xf32>
	%178="ufront.parameter"(){dtype="Float", initializer="0x5585adeb00c0", requires_grad=true}:() -> tensor<160xf32>
	%179="ufront.conv2d"(%176, %177, %178){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x7x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%180="ufront.relu"(%179):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%181="ufront.parameter"(){dtype="Float", initializer="0x5585efb84cd0", requires_grad=true}:() -> tensor<160x160x1x7xf32>
	%182="ufront.parameter"(){dtype="Float", initializer="0x5585addbff50", requires_grad=true}:() -> tensor<160xf32>
	%183="ufront.conv2d"(%180, %181, %182){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x1x7xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%184="ufront.relu"(%183):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%185="ufront.parameter"(){dtype="Float", initializer="0x5585f9b59fe0", requires_grad=true}:() -> tensor<160x160x7x1xf32>
	%186="ufront.parameter"(){dtype="Float", initializer="0x5585adcaa8e0", requires_grad=true}:() -> tensor<160xf32>
	%187="ufront.conv2d"(%184, %185, %186){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x7x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%188="ufront.relu"(%187):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%189="ufront.parameter"(){dtype="Float", initializer="0x5585d0789130", requires_grad=true}:() -> tensor<192x160x1x7xf32>
	%190="ufront.parameter"(){dtype="Float", initializer="0x5585adcd71a0", requires_grad=true}:() -> tensor<192xf32>
	%191="ufront.conv2d"(%188, %189, %190){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<192x160x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%192="ufront.relu"(%191):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%193="ufront.parameter"(){dtype="Float", initializer="0x5585ef9e5ca0", requires_grad=true}:() -> tensor<160x768x1x1xf32>
	%194="ufront.parameter"(){dtype="Float", initializer="0x5585adec9c30", requires_grad=true}:() -> tensor<160xf32>
	%195="ufront.conv2d"(%172, %193, %194){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<160x768x1x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%196="ufront.relu"(%195):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%197="ufront.parameter"(){dtype="Float", initializer="0x5585d085b140", requires_grad=true}:() -> tensor<160x160x1x7xf32>
	%198="ufront.parameter"(){dtype="Float", initializer="0x5585ee0415b0", requires_grad=true}:() -> tensor<160xf32>
	%199="ufront.conv2d"(%196, %197, %198){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x1x7xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%200="ufront.relu"(%199):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%201="ufront.parameter"(){dtype="Float", initializer="0x5585bd0ff7d0", requires_grad=true}:() -> tensor<192x160x7x1xf32>
	%202="ufront.parameter"(){dtype="Float", initializer="0x5585adcd74b0", requires_grad=true}:() -> tensor<192xf32>
	%203="ufront.conv2d"(%200, %201, %202){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<192x160x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%204="ufront.relu"(%203):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%205="ufront.parameter"(){dtype="Float", initializer="0x5585f9e16020", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%206="ufront.parameter"(){dtype="Float", initializer="0x5585adcd90a0", requires_grad=true}:() -> tensor<192xf32>
	%207="ufront.conv2d"(%172, %205, %206){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%208="ufront.relu"(%207):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%209="ufront.pool2d"(%172){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x768x12x12xf32>) -> tensor<1x768x12x12xf32>
	%210="ufront.parameter"(){dtype="Float", initializer="0x5585d09ff160", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%211="ufront.parameter"(){dtype="Float", initializer="0x5585f231e0c0", requires_grad=true}:() -> tensor<192xf32>
	%212="ufront.conv2d"(%209, %210, %211){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%213="ufront.relu"(%212):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%214="ufront.concat"(%208, %204, %192, %213){axis=1}:(tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>) -> tensor<1x768x12x12xf32>
	%215="ufront.parameter"(){dtype="Float", initializer="0x5585bd1d17e0", requires_grad=true}:() -> tensor<160x768x1x1xf32>
	%216="ufront.parameter"(){dtype="Float", initializer="0x5585f26efe50", requires_grad=true}:() -> tensor<160xf32>
	%217="ufront.conv2d"(%214, %215, %216){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<160x768x1x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%218="ufront.relu"(%217):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%219="ufront.parameter"(){dtype="Float", initializer="0x5585bd4f5830", requires_grad=true}:() -> tensor<160x160x7x1xf32>
	%220="ufront.parameter"(){dtype="Float", initializer="0x5585b42ed750", requires_grad=true}:() -> tensor<160xf32>
	%221="ufront.conv2d"(%218, %219, %220){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x7x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%222="ufront.relu"(%221):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%223="ufront.parameter"(){dtype="Float", initializer="0x5585f03c91a0", requires_grad=true}:() -> tensor<160x160x1x7xf32>
	%224="ufront.parameter"(){dtype="Float", initializer="0x5585adeb5f60", requires_grad=true}:() -> tensor<160xf32>
	%225="ufront.conv2d"(%222, %223, %224){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x1x7xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%226="ufront.relu"(%225):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%227="ufront.parameter"(){dtype="Float", initializer="0x5585f05271c0", requires_grad=true}:() -> tensor<160x160x7x1xf32>
	%228="ufront.parameter"(){dtype="Float", initializer="0x5585f9ee8670", requires_grad=true}:() -> tensor<160xf32>
	%229="ufront.conv2d"(%226, %227, %228){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x7x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%230="ufront.relu"(%229):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%231="ufront.parameter"(){dtype="Float", initializer="0x5585e9449950", requires_grad=true}:() -> tensor<192x160x1x7xf32>
	%232="ufront.parameter"(){dtype="Float", initializer="0x5585adcbc850", requires_grad=true}:() -> tensor<192xf32>
	%233="ufront.conv2d"(%230, %231, %232){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<192x160x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%234="ufront.relu"(%233):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%235="ufront.parameter"(){dtype="Float", initializer="0x5585bd405810", requires_grad=true}:() -> tensor<160x768x1x1xf32>
	%236="ufront.parameter"(){dtype="Float", initializer="0x5585adebb710", requires_grad=true}:() -> tensor<160xf32>
	%237="ufront.conv2d"(%214, %235, %236){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<160x768x1x1xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%238="ufront.relu"(%237):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%239="ufront.parameter"(){dtype="Float", initializer="0x5585e951b960", requires_grad=true}:() -> tensor<160x160x1x7xf32>
	%240="ufront.parameter"(){dtype="Float", initializer="0x5585bb08bb00", requires_grad=true}:() -> tensor<160xf32>
	%241="ufront.conv2d"(%238, %239, %240){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<160x160x1x7xf32>, tensor<160xf32>) -> tensor<1x160x12x12xf32>
	%242="ufront.relu"(%241):(tensor<1x160x12x12xf32>) -> tensor<1x160x12x12xf32>
	%243="ufront.parameter"(){dtype="Float", initializer="0x5585e981d9a0", requires_grad=true}:() -> tensor<192x160x7x1xf32>
	%244="ufront.parameter"(){dtype="Float", initializer="0x5585ee0bead0", requires_grad=true}:() -> tensor<192xf32>
	%245="ufront.conv2d"(%242, %243, %244){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x160x12x12xf32>, tensor<192x160x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%246="ufront.relu"(%245):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%247="ufront.parameter"(){dtype="Float", initializer="0x5585f07e3200", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%248="ufront.parameter"(){dtype="Float", initializer="0x5585ee33e280", requires_grad=true}:() -> tensor<192xf32>
	%249="ufront.conv2d"(%214, %247, %248){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%250="ufront.relu"(%249):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%251="ufront.pool2d"(%214){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x768x12x12xf32>) -> tensor<1x768x12x12xf32>
	%252="ufront.parameter"(){dtype="Float", initializer="0x5585e96bf980", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%253="ufront.parameter"(){dtype="Float", initializer="0x5585b6d019f0", requires_grad=true}:() -> tensor<192xf32>
	%254="ufront.conv2d"(%251, %252, %253){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%255="ufront.relu"(%254):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%256="ufront.concat"(%250, %246, %234, %255){axis=1}:(tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>) -> tensor<1x768x12x12xf32>
	%257="ufront.parameter"(){dtype="Float", initializer="0x5585e8805900", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%258="ufront.parameter"(){dtype="Float", initializer="0x5585e8481be0", requires_grad=true}:() -> tensor<192xf32>
	%259="ufront.conv2d"(%256, %257, %258){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%260="ufront.relu"(%259):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%261="ufront.parameter"(){dtype="Float", initializer="0x5585e8a45940", requires_grad=true}:() -> tensor<192x192x7x1xf32>
	%262="ufront.parameter"(){dtype="Float", initializer="0x5585c4c0b760", requires_grad=true}:() -> tensor<192xf32>
	%263="ufront.conv2d"(%260, %261, %262){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%264="ufront.relu"(%263):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%265="ufront.parameter"(){dtype="Float", initializer="0x5585be29b500", requires_grad=true}:() -> tensor<192x192x1x7xf32>
	%266="ufront.parameter"(){dtype="Float", initializer="0x5585b8c54510", requires_grad=true}:() -> tensor<192xf32>
	%267="ufront.conv2d"(%264, %265, %266){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%268="ufront.relu"(%267):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%269="ufront.parameter"(){dtype="Float", initializer="0x5585be493520", requires_grad=true}:() -> tensor<192x192x7x1xf32>
	%270="ufront.parameter"(){dtype="Float", initializer="0x5585f0298e00", requires_grad=true}:() -> tensor<192xf32>
	%271="ufront.conv2d"(%268, %269, %270){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%272="ufront.relu"(%271):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%273="ufront.parameter"(){dtype="Float", initializer="0x5585be68b540", requires_grad=true}:() -> tensor<192x192x1x7xf32>
	%274="ufront.parameter"(){dtype="Float", initializer="0x5585ee0b5c00", requires_grad=true}:() -> tensor<192xf32>
	%275="ufront.conv2d"(%272, %273, %274){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%276="ufront.relu"(%275):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%277="ufront.parameter"(){dtype="Float", initializer="0x5585e8925920", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%278="ufront.parameter"(){dtype="Float", initializer="0x5585b3f27a80", requires_grad=true}:() -> tensor<192xf32>
	%279="ufront.conv2d"(%256, %277, %278){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%280="ufront.relu"(%279):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%281="ufront.parameter"(){dtype="Float", initializer="0x5585fa1dd3d0", requires_grad=true}:() -> tensor<192x192x1x7xf32>
	%282="ufront.parameter"(){dtype="Float", initializer="0x5585add98cd0", requires_grad=true}:() -> tensor<192xf32>
	%283="ufront.conv2d"(%280, %281, %282){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%284="ufront.relu"(%283):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%285="ufront.parameter"(){dtype="Float", initializer="0x5585fa2d93e0", requires_grad=true}:() -> tensor<192x192x7x1xf32>
	%286="ufront.parameter"(){dtype="Float", initializer="0x5585e85c7ad0", requires_grad=true}:() -> tensor<192xf32>
	%287="ufront.conv2d"(%284, %285, %286){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%288="ufront.relu"(%287):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%289="ufront.parameter"(){dtype="Float", initializer="0x5585be787550", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%290="ufront.parameter"(){dtype="Float", initializer="0x5585e8293940", requires_grad=true}:() -> tensor<192xf32>
	%291="ufront.conv2d"(%256, %289, %290){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%292="ufront.relu"(%291):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%293="ufront.pool2d"(%256){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x768x12x12xf32>) -> tensor<1x768x12x12xf32>
	%294="ufront.parameter"(){dtype="Float", initializer="0x5585cc2b94f0", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%295="ufront.parameter"(){dtype="Float", initializer="0x5585b43ff840", requires_grad=true}:() -> tensor<192xf32>
	%296="ufront.conv2d"(%293, %294, %295){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%297="ufront.relu"(%296):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%298="ufront.concat"(%292, %288, %276, %297){axis=1}:(tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>, tensor<1x192x12x12xf32>) -> tensor<1x768x12x12xf32>
	%299="ufront.pool2d"(%298){kernel=[3, 3], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x768x12x12xf32>) -> tensor<1x768x5x5xf32>
	%300="ufront.parameter"(){dtype="Float", initializer="0x5585cc541520", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%301="ufront.parameter"(){dtype="Float", initializer="0x5585adcc4e40", requires_grad=true}:() -> tensor<192xf32>
	%302="ufront.conv2d"(%298, %300, %301){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%303="ufront.relu"(%302):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%304="ufront.parameter"(){dtype="Float", initializer="0x5585cc781560", requires_grad=true}:() -> tensor<192x192x1x7xf32>
	%305="ufront.parameter"(){dtype="Float", initializer="0x5585ba9bd310", requires_grad=true}:() -> tensor<192xf32>
	%306="ufront.conv2d"(%303, %304, %305){dilation=[1, 1], groups=1, kernel=[1, 7], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 3, 3], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x1x7xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%307="ufront.relu"(%306):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%308="ufront.parameter"(){dtype="Float", initializer="0x5585bdbad720", requires_grad=true}:() -> tensor<192x192x7x1xf32>
	%309="ufront.parameter"(){dtype="Float", initializer="0x5585adf95360", requires_grad=true}:() -> tensor<192xf32>
	%310="ufront.conv2d"(%307, %308, %309){dilation=[1, 1], groups=1, kernel=[7, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[3, 3, 0, 0], stride=[1, 1]}:(tensor<1x192x12x12xf32>, tensor<192x192x7x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%311="ufront.relu"(%310):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%312="ufront.parameter"(){dtype="Float", initializer="0x5585bdf9d760", requires_grad=true}:() -> tensor<192x192x3x3xf32>
	%313="ufront.parameter"(){dtype="Float", initializer="0x5585b3f2b8e0", requires_grad=true}:() -> tensor<192xf32>
	%314="ufront.conv2d"(%311, %312, %313){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[2, 2]}:(tensor<1x192x12x12xf32>, tensor<192x192x3x3xf32>, tensor<192xf32>) -> tensor<1x192x5x5xf32>
	%315="ufront.relu"(%314):(tensor<1x192x5x5xf32>) -> tensor<1x192x5x5xf32>
	%316="ufront.parameter"(){dtype="Float", initializer="0x5585cc661540", requires_grad=true}:() -> tensor<192x768x1x1xf32>
	%317="ufront.parameter"(){dtype="Float", initializer="0x5585c4b688d0", requires_grad=true}:() -> tensor<192xf32>
	%318="ufront.conv2d"(%298, %316, %317){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x768x12x12xf32>, tensor<192x768x1x1xf32>, tensor<192xf32>) -> tensor<1x192x12x12xf32>
	%319="ufront.relu"(%318):(tensor<1x192x12x12xf32>) -> tensor<1x192x12x12xf32>
	%320="ufront.parameter"(){dtype="Float", initializer="0x5585bb314170", requires_grad=true}:() -> tensor<320x192x3x3xf32>
	%321="ufront.parameter"(){dtype="Float", initializer="0x5585ee0b2ed0", requires_grad=true}:() -> tensor<320xf32>
	%322="ufront.conv2d"(%319, %320, %321){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[2, 2]}:(tensor<1x192x12x12xf32>, tensor<320x192x3x3xf32>, tensor<320xf32>) -> tensor<1x320x5x5xf32>
	%323="ufront.relu"(%322):(tensor<1x320x5x5xf32>) -> tensor<1x320x5x5xf32>
	%324="ufront.concat"(%323, %315, %299){axis=1}:(tensor<1x320x5x5xf32>, tensor<1x192x5x5xf32>, tensor<1x768x5x5xf32>) -> tensor<1x1280x5x5xf32>
	%325="ufront.parameter"(){dtype="Float", initializer="0x5585bb530180", requires_grad=true}:() -> tensor<448x1280x1x1xf32>
	%326="ufront.parameter"(){dtype="Float", initializer="0x5585ee0bd1f0", requires_grad=true}:() -> tensor<448xf32>
	%327="ufront.conv2d"(%324, %325, %326){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x1280x5x5xf32>, tensor<448x1280x1x1xf32>, tensor<448xf32>) -> tensor<1x448x5x5xf32>
	%328="ufront.relu"(%327):(tensor<1x448x5x5xf32>) -> tensor<1x448x5x5xf32>
	%329="ufront.parameter"(){dtype="Float", initializer="0x5585cb0044d0", requires_grad=true}:() -> tensor<384x448x3x3xf32>
	%330="ufront.parameter"(){dtype="Float", initializer="0x5585ee0c0d60", requires_grad=true}:() -> tensor<384xf32>
	%331="ufront.conv2d"(%328, %329, %330){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x448x5x5xf32>, tensor<384x448x3x3xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%332="ufront.relu"(%331):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%333="ufront.parameter"(){dtype="Float", initializer="0x5585f0b22c20", requires_grad=true}:() -> tensor<384x384x3x1xf32>
	%334="ufront.parameter"(){dtype="Float", initializer="0x5585e9ac9b00", requires_grad=true}:() -> tensor<384xf32>
	%335="ufront.conv2d"(%332, %333, %334){dilation=[1, 1], groups=1, kernel=[3, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 0, 0], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x3x1xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%336="ufront.relu"(%335):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%337="ufront.parameter"(){dtype="Float", initializer="0x5585ea9b0750", requires_grad=true}:() -> tensor<384x384x1x3xf32>
	%338="ufront.parameter"(){dtype="Float", initializer="0x5585bec41570", requires_grad=true}:() -> tensor<384xf32>
	%339="ufront.conv2d"(%332, %337, %338){dilation=[1, 1], groups=1, kernel=[1, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 1, 1], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x1x3xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%340="ufront.relu"(%339):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%341="ufront.parameter"(){dtype="Float", initializer="0x5585cb5ec4e0", requires_grad=true}:() -> tensor<384x1280x1x1xf32>
	%342="ufront.parameter"(){dtype="Float", initializer="0x5585add5c000", requires_grad=true}:() -> tensor<384xf32>
	%343="ufront.conv2d"(%324, %341, %342){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x1280x5x5xf32>, tensor<384x1280x1x1xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%344="ufront.relu"(%343):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%345="ufront.parameter"(){dtype="Float", initializer="0x5585bc8eb780", requires_grad=true}:() -> tensor<384x384x3x1xf32>
	%346="ufront.parameter"(){dtype="Float", initializer="0x5585ee03f7c0", requires_grad=true}:() -> tensor<384xf32>
	%347="ufront.conv2d"(%344, %345, %346){dilation=[1, 1], groups=1, kernel=[3, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 0, 0], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x3x1xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%348="ufront.relu"(%347):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%349="ufront.parameter"(){dtype="Float", initializer="0x5585bccab7a0", requires_grad=true}:() -> tensor<384x384x1x3xf32>
	%350="ufront.parameter"(){dtype="Float", initializer="0x5585add5d7b0", requires_grad=true}:() -> tensor<384xf32>
	%351="ufront.conv2d"(%344, %349, %350){dilation=[1, 1], groups=1, kernel=[1, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 1, 1], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x1x3xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%352="ufront.relu"(%351):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%353="ufront.parameter"(){dtype="Float", initializer="0x5585eb26b790", requires_grad=true}:() -> tensor<320x1280x1x1xf32>
	%354="ufront.parameter"(){dtype="Float", initializer="0x5585add8cfc0", requires_grad=true}:() -> tensor<320xf32>
	%355="ufront.conv2d"(%324, %353, %354){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x1280x5x5xf32>, tensor<320x1280x1x1xf32>, tensor<320xf32>) -> tensor<1x320x5x5xf32>
	%356="ufront.relu"(%355):(tensor<1x320x5x5xf32>) -> tensor<1x320x5x5xf32>
	%357="ufront.pool2d"(%324){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x1280x5x5xf32>) -> tensor<1x1280x5x5xf32>
	%358="ufront.parameter"(){dtype="Float", initializer="0x5585bdda5740", requires_grad=true}:() -> tensor<192x1280x1x1xf32>
	%359="ufront.parameter"(){dtype="Float", initializer="0x5585add8d6d0", requires_grad=true}:() -> tensor<192xf32>
	%360="ufront.conv2d"(%357, %358, %359){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x1280x5x5xf32>, tensor<192x1280x1x1xf32>, tensor<192xf32>) -> tensor<1x192x5x5xf32>
	%361="ufront.relu"(%360):(tensor<1x192x5x5xf32>) -> tensor<1x192x5x5xf32>
	%362="ufront.concat"(%356, %352, %348, %340, %336, %361){axis=1}:(tensor<1x320x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x192x5x5xf32>) -> tensor<1x2048x5x5xf32>
	%363="ufront.parameter"(){dtype="Float", initializer="0x5585eb8eb7d0", requires_grad=true}:() -> tensor<448x2048x1x1xf32>
	%364="ufront.parameter"(){dtype="Float", initializer="0x5585ca9cc7a0", requires_grad=true}:() -> tensor<448xf32>
	%365="ufront.conv2d"(%362, %363, %364){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x2048x5x5xf32>, tensor<448x2048x1x1xf32>, tensor<448xf32>) -> tensor<1x448x5x5xf32>
	%366="ufront.relu"(%365):(tensor<1x448x5x5xf32>) -> tensor<1x448x5x5xf32>
	%367="ufront.parameter"(){dtype="Float", initializer="0x5585ed10c7f0", requires_grad=true}:() -> tensor<384x448x3x3xf32>
	%368="ufront.parameter"(){dtype="Float", initializer="0x5585f4329500", requires_grad=true}:() -> tensor<384xf32>
	%369="ufront.conv2d"(%366, %367, %368){dilation=[1, 1], groups=1, kernel=[3, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 1, 1], stride=[1, 1]}:(tensor<1x448x5x5xf32>, tensor<384x448x3x3xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%370="ufront.relu"(%369):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%371="ufront.parameter"(){dtype="Float", initializer="0x5585ebc6b7e0", requires_grad=true}:() -> tensor<384x384x3x1xf32>
	%372="ufront.parameter"(){dtype="Float", initializer="0x5585ee09b0c0", requires_grad=true}:() -> tensor<384xf32>
	%373="ufront.conv2d"(%370, %371, %372){dilation=[1, 1], groups=1, kernel=[3, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 0, 0], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x3x1xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%374="ufront.relu"(%373):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%375="ufront.parameter"(){dtype="Float", initializer="0x5585eca0c7d0", requires_grad=true}:() -> tensor<384x384x1x3xf32>
	%376="ufront.parameter"(){dtype="Float", initializer="0x5585ee0aaef0", requires_grad=true}:() -> tensor<384xf32>
	%377="ufront.conv2d"(%370, %375, %376){dilation=[1, 1], groups=1, kernel=[1, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 1, 1], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x1x3xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%378="ufront.relu"(%377):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%379="ufront.parameter"(){dtype="Float", initializer="0x5585eda54820", requires_grad=true}:() -> tensor<384x2048x1x1xf32>
	%380="ufront.parameter"(){dtype="Float", initializer="0x5585add96750", requires_grad=true}:() -> tensor<384xf32>
	%381="ufront.conv2d"(%362, %379, %380){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x2048x5x5xf32>, tensor<384x2048x1x1xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%382="ufront.relu"(%381):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%383="ufront.parameter"(){dtype="Float", initializer="0x5585ed6f4800", requires_grad=true}:() -> tensor<384x384x3x1xf32>
	%384="ufront.parameter"(){dtype="Float", initializer="0x5585ee0321c0", requires_grad=true}:() -> tensor<384xf32>
	%385="ufront.conv2d"(%382, %383, %384){dilation=[1, 1], groups=1, kernel=[3, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[1, 1, 0, 0], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x3x1xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%386="ufront.relu"(%385):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%387="ufront.parameter"(){dtype="Float", initializer="0x5585f5746300", requires_grad=true}:() -> tensor<384x384x1x3xf32>
	%388="ufront.parameter"(){dtype="Float", initializer="0x5585ee0ba5f0", requires_grad=true}:() -> tensor<384xf32>
	%389="ufront.conv2d"(%382, %387, %388){dilation=[1, 1], groups=1, kernel=[1, 3], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 1, 1], stride=[1, 1]}:(tensor<1x384x5x5xf32>, tensor<384x384x1x3xf32>, tensor<384xf32>) -> tensor<1x384x5x5xf32>
	%390="ufront.relu"(%389):(tensor<1x384x5x5xf32>) -> tensor<1x384x5x5xf32>
	%391="ufront.parameter"(){dtype="Float", initializer="0x5585f6256350", requires_grad=true}:() -> tensor<320x2048x1x1xf32>
	%392="ufront.parameter"(){dtype="Float", initializer="0x5585add84c00", requires_grad=true}:() -> tensor<320xf32>
	%393="ufront.conv2d"(%362, %391, %392){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x2048x5x5xf32>, tensor<320x2048x1x1xf32>, tensor<320xf32>) -> tensor<1x320x5x5xf32>
	%394="ufront.relu"(%393):(tensor<1x320x5x5xf32>) -> tensor<1x320x5x5xf32>
	%395="ufront.pool2d"(%362){kernel=[3, 3], pad=[1, 1], pool_type="POOL_AVG", stride=[1, 1]}:(tensor<1x2048x5x5xf32>) -> tensor<1x2048x5x5xf32>
	%396="ufront.parameter"(){dtype="Float", initializer="0x5585eb5cb7b0", requires_grad=true}:() -> tensor<192x2048x1x1xf32>
	%397="ufront.parameter"(){dtype="Float", initializer="0x5585ee040750", requires_grad=true}:() -> tensor<192xf32>
	%398="ufront.conv2d"(%395, %396, %397){dilation=[1, 1], groups=1, kernel=[1, 1], operand_segment_sizes=array<i32:1, 1, 1>, pad=[0, 0, 0, 0], stride=[1, 1]}:(tensor<1x2048x5x5xf32>, tensor<192x2048x1x1xf32>, tensor<192xf32>) -> tensor<1x192x5x5xf32>
	%399="ufront.relu"(%398):(tensor<1x192x5x5xf32>) -> tensor<1x192x5x5xf32>
	%400="ufront.concat"(%394, %390, %386, %378, %374, %399){axis=1}:(tensor<1x320x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x384x5x5xf32>, tensor<1x192x5x5xf32>) -> tensor<1x2048x5x5xf32>
	%401="ufront.pool2d"(%400){output_size=[1, 1], pad=[0, 0], pool_type="POOL_ADAPTIVE", stride=[1, 1]}:(tensor<1x2048x5x5xf32>) -> tensor<1x2048x1x1xf32>
	%402="ufront.flat"(%401){end_dim=-1, start_dim=1}:(tensor<1x2048x1x1xf32>) -> tensor<1x2048xf32>
	%403="ufront.parameter"(){dtype="Float", initializer="0x5585f71a6390", requires_grad=true}:() -> tensor<2048x1000xf32>
	%404="ufront.matmul"(%402, %403):(tensor<1x2048xf32>, tensor<2048x1000xf32>) -> tensor<1x1000xf32>
	%405="ufront.softmax"(%404):(tensor<1x1000xf32>) -> tensor<1x1000xf32>
	return %405: tensor<1x1000xf32>
}