func.func @forward(%input1: tensor<1x3x224x224xf32>, %input2: tensor<1x3x224x224xf32>) -> tensor<1x10xf32>  { 
	%1="ufront.conv2d"(%input1){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<1x3x224x224xf32>) -> tensor<1x32x222x222xf32>
	%2="ufront.relu"(%1):(tensor<1x32x222x222xf32>) -> tensor<1x32x222x222xf32>
	%3="ufront.conv2d"(%input2){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<1x3x224x224xf32>) -> tensor<1x32x222x222xf32>
	%4="ufront.relu"(%3):(tensor<1x32x222x222xf32>) -> tensor<1x32x222x222xf32>
	%5="ufront.concat"(%2, %4){axis=1}:(tensor<1x32x222x222xf32>, tensor<1x32x222x222xf32>) -> tensor<1x64x222x222xf32>
	%6, %7="ufront.split"(%5){axis=1, sizes=[32, 32]}:(tensor<1x64x222x222xf32>) -> (tensor<1x32x222x222xf32>, tensor<1x32x222x222xf32>)
	%8="ufront.concat"(%6, %7){axis=1}:(tensor<1x32x222x222xf32>, tensor<1x32x222x222xf32>) -> tensor<1x64x222x222xf32>
	%9="ufront.conv2d"(%8){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x222x222xf32>) -> tensor<1x64x220x220xf32>
	%10="ufront.relu"(%9):(tensor<1x64x220x220xf32>) -> tensor<1x64x220x220xf32>
	%11="ufront.pool2d"(%10){kernel=[2, 2], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x64x220x220xf32>) -> tensor<1x64x110x110xf32>
	%12="ufront.conv2d"(%11){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x110x110xf32>) -> tensor<1x64x108x108xf32>
	%13="ufront.relu"(%12):(tensor<1x64x108x108xf32>) -> tensor<1x64x108x108xf32>
	%14="ufront.conv2d"(%13){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<1x64x108x108xf32>) -> tensor<1x64x106x106xf32>
	%15="ufront.relu"(%14):(tensor<1x64x106x106xf32>) -> tensor<1x64x106x106xf32>
	%16="ufront.pool2d"(%15){kernel=[2, 2], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<1x64x106x106xf32>) -> tensor<1x64x53x53xf32>
	%17="ufront.batchnorm"(%16){affine=true, eps=0.00001, momentum=0.1, track_running_stats=true}:(tensor<1x64x53x53xf32>) -> tensor<1x64x53x53xf32>
	%18="ufront.flat"(%17){end_dim=-1, start_dim=1}:(tensor<1x64x53x53xf32>) -> tensor<1x179776xf32>
	%19="ufront.linear"(%18):(tensor<1x179776xf32>) -> tensor<1x512xf32>
	%20="ufront.relu"(%19):(tensor<1x512xf32>) -> tensor<1x512xf32>
	%21="ufront.linear"(%20):(tensor<1x512xf32>) -> tensor<1x10xf32>
	%22="ufront.softmax"(%21):(tensor<1x10xf32>) -> tensor<1x10xf32>
	return %22: tensor<1x10xf32>
}