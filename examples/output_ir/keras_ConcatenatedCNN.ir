func.func @forward(%input1: tensor<32x3x32x32xf32>) -> tensor<32x10xf32>  { 
	%1="ufront.conv2d"(%input1){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<32x3x32x32xf32>) -> tensor<32x32x30x30xf32>
	%2="ufront.relu"(%1):(tensor<32x32x30x30xf32>) -> tensor<32x32x30x30xf32>
	%3="ufront.conv2d"(%input1){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<32x3x32x32xf32>) -> tensor<32x32x30x30xf32>
	%4="ufront.relu"(%3):(tensor<32x32x30x30xf32>) -> tensor<32x32x30x30xf32>
	%5="ufront.concat"(%4, %2){axis=1}:(tensor<32x32x30x30xf32>, tensor<32x32x30x30xf32>) -> tensor<32x64x30x30xf32>
	%6="ufront.conv2d"(%5){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x30x30xf32>) -> tensor<32x64x28x28xf32>
	%7="ufront.relu"(%6):(tensor<32x64x28x28xf32>) -> tensor<32x64x28x28xf32>
	%8="ufront.pool2d"(%7){kernel=[2, 2], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<32x64x28x28xf32>) -> tensor<32x64x14x14xf32>
	%9="ufront.conv2d"(%8){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x14x14xf32>) -> tensor<32x64x12x12xf32>
	%10="ufront.relu"(%9):(tensor<32x64x12x12xf32>) -> tensor<32x64x12x12xf32>
	%11="ufront.conv2d"(%10){groups=1, kernel=[3, 3], pad=[0, 0], stride=[1, 1]}:(tensor<32x64x12x12xf32>) -> tensor<32x64x10x10xf32>
	%12="ufront.relu"(%11):(tensor<32x64x10x10xf32>) -> tensor<32x64x10x10xf32>
	%13="ufront.pool2d"(%12){kernel=[2, 2], pad=[0, 0], pool_type="POOL_MAX", stride=[2, 2]}:(tensor<32x64x10x10xf32>) -> tensor<32x64x5x5xf32>
	%14="ufront.flat"(%13):(tensor<32x64x5x5xf32>) -> tensor<32x1600xf32>
	%15="ufront.linear"(%14):(tensor<32x1600xf32>) -> tensor<32x512xf32>
	%16="ufront.relu"(%15):(tensor<32x512xf32>) -> tensor<32x512xf32>
	%17="ufront.linear"(%16):(tensor<32x512xf32>) -> tensor<32x10xf32>
	%18="ufront.softmax"(%17):(tensor<32x10xf32>) -> tensor<32x10xf32>
	return %18: tensor<32x10xf32>
}